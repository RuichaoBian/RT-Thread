; generated by Component: ARM Compiler 5.06 update 3 (build 300) Tool: ArmCC [4d35f0]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\objects\startup.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\startup.d --cpu=Cortex-M0 --apcs=interwork --diag_suppress=9931 -I.\Libraries\Device\Nuvoton -I..\..\components\finsh -I.\Libraries\CMSIS\Include -I.\Libraries\StdDriver\inc -I..\..\include -I.\APP -I.\Drivers -I..\..\components\drivers\include -I..\..\components\drivers\include\drivers -I..\nuvoton_nuc240 -I.\Libraries\Device\Nuvoton\NUC230_240\Include -I..\..\include -I..\..\components\drivers\usb\usbdevice\class -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=521 --omf_browse=.\objects\startup.crf APP\startup.c]
                          THUMB

                          AREA ||i.USB_Init||, CODE, READONLY, ALIGN=2

                  USB_Init PROC
;;;45     
;;;46     void USB_Init(void)
000000  b510              PUSH     {r4,lr}
;;;47     {
;;;48     	USBD_Open(&gsInfo, HID_ClassRequest, NULL);
000002  2200              MOVS     r2,#0
000004  4909              LDR      r1,|L1.44|
000006  480a              LDR      r0,|L1.48|
000008  f7fffffe          BL       USBD_Open
;;;49     	HID_Init();
00000c  f7fffffe          BL       HID_Init
;;;50     	USBD_Start();
000010  f7fffffe          BL       USBD_Start
000014  2001              MOVS     r0,#1
000016  4907              LDR      r1,|L1.52|
000018  05c0              LSLS     r0,r0,#23
00001a  6008              STR      r0,[r1,#0]
00001c  4806              LDR      r0,|L1.56|
00001e  6801              LDR      r1,[r0,#0]
000020  0209              LSLS     r1,r1,#8
000022  0a09              LSRS     r1,r1,#8
000024  0702              LSLS     r2,r0,#28
000026  4311              ORRS     r1,r1,r2
000028  6001              STR      r1,[r0,#0]
;;;51     	NVIC_EnableIRQ(USBD_IRQn);
;;;52     	NVIC_SetPriority(USBD_IRQn,5);
;;;53     	//HID_UpdateKbData();
;;;54     }
00002a  bd10              POP      {r4,pc}
;;;55     
                          ENDP

                  |L1.44|
                          DCD      HID_ClassRequest
                  |L1.48|
                          DCD      gsInfo
                  |L1.52|
                          DCD      0xe000e100
                  |L1.56|
                          DCD      0xe000e414

                          AREA ||i.assert_failed||, CODE, READONLY, ALIGN=2

                  assert_failed PROC
;;;35     *******************************************************************************/
;;;36     void assert_failed(uint8_t* file, uint32_t line)
000000  4604              MOV      r4,r0
;;;37     {
000002  460d              MOV      r5,r1
;;;38     	rt_kprintf("\n\r Wrong parameter value detected on\r\n");
000004  a005              ADR      r0,|L2.28|
000006  f7fffffe          BL       rt_kprintf
;;;39     	rt_kprintf("       file  %s\r\n", file);
00000a  4621              MOV      r1,r4
00000c  a00d              ADR      r0,|L2.68|
00000e  f7fffffe          BL       rt_kprintf
;;;40     	rt_kprintf("       line  %d\r\n", line);
000012  4629              MOV      r1,r5
000014  a010              ADR      r0,|L2.88|
000016  f7fffffe          BL       rt_kprintf
                  |L2.26|
;;;41     
;;;42     	while (1) ;
00001a  e7fe              B        |L2.26|
;;;43     }
;;;44     
                          ENDP

                  |L2.28|
00001c  0a0d2057          DCB      "\n\r Wrong parameter value detected on\r\n",0
000020  726f6e67
000024  20706172
000028  616d6574
00002c  65722076
000030  616c7565
000034  20646574
000038  65637465
00003c  64206f6e
000040  0d0a00  
000043  00                DCB      0
                  |L2.68|
000044  20202020          DCB      "       file  %s\r\n",0
000048  20202066
00004c  696c6520
000050  2025730d
000054  0a00    
000056  00                DCB      0
000057  00                DCB      0
                  |L2.88|
000058  20202020          DCB      "       line  %d\r\n",0
00005c  2020206c
000060  696e6520
000064  2025640d
000068  0a00    
00006a  00                DCB      0
00006b  00                DCB      0

                          AREA ||i.main||, CODE, READONLY, ALIGN=1

                  main PROC
;;;95     
;;;96     int main(void)
000000  b510              PUSH     {r4,lr}
;;;97     {
;;;98     	/* disable interrupt first */
;;;99     	rt_hw_interrupt_disable();
000002  f7fffffe          BL       rt_hw_interrupt_disable
;;;100    	
;;;101    	/* startup RT-Thread RTOS */
;;;102    	rtthread_startup();
000006  f7fffffe          BL       rtthread_startup
;;;103    	return 0;
00000a  2000              MOVS     r0,#0
;;;104    }
00000c  bd10              POP      {r4,pc}
;;;105    
                          ENDP


                          AREA ||i.rtthread_startup||, CODE, READONLY, ALIGN=2

                  rtthread_startup PROC
;;;55     
;;;56     void rtthread_startup(void)
000000  b510              PUSH     {r4,lr}
;;;57     {
;;;58     	/* init board */
;;;59     	rt_hw_board_init();
000002  f7fffffe          BL       rt_hw_board_init
;;;60     
;;;61     	/* show version */
;;;62     	rt_show_version();
000006  f7fffffe          BL       rt_show_version
;;;63     	
;;;64     	//USB_Init();
;;;65     	
;;;66     	/* init tick */
;;;67     	rt_system_tick_init();
00000a  f7fffffe          BL       rt_system_tick_init
;;;68     
;;;69     	/* init kernel object */
;;;70     	rt_system_object_init();
00000e  f7fffffe          BL       rt_system_object_init
;;;71     
;;;72     	/* init timer system */
;;;73     	rt_system_timer_init();
000012  f7fffffe          BL       rt_system_timer_init
;;;74     
;;;75     #ifdef RT_USING_HEAP
;;;76         rt_system_heap_init((void*)NUC240_SRAM_BEGIN, (void*)NUC240_SRAM_END);
000016  4907              LDR      r1,|L4.52|
000018  4807              LDR      r0,|L4.56|
00001a  f7fffffe          BL       rt_system_heap_init
;;;77     #endif
;;;78     
;;;79     	/* init scheduler system */
;;;80     	rt_system_scheduler_init();
00001e  f7fffffe          BL       rt_system_scheduler_init
;;;81     
;;;82     	/* init application */
;;;83     	//rt_application_init();
;;;84     		rt_usb_device_init();
000022  f7fffffe          BL       rt_usb_device_init
;;;85        /* init timer thread */
;;;86       rt_system_timer_thread_init();
000026  f7fffffe          BL       rt_system_timer_thread_init
;;;87     
;;;88     	/* init idle thread */
;;;89     	rt_thread_idle_init();
00002a  f7fffffe          BL       rt_thread_idle_init
;;;90     
;;;91     	/* start scheduler */
;;;92     	rt_system_scheduler_start();
00002e  f7fffffe          BL       rt_system_scheduler_start
;;;93     
;;;94     }
000032  bd10              POP      {r4,pc}
;;;95     
                          ENDP

                  |L4.52|
                          DCD      0x20003fff
                  |L4.56|
                          DCD      ||Image$$RW_IRAM1$$ZI$$Limit||

;*** Start embedded assembler ***

#line 1 "APP\\startup.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_startup_c_d3500228____REV16|
#line 118 ".\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___9_startup_c_d3500228____REV16| PROC
#line 119

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_startup_c_d3500228____REVSH|
#line 132
|__asm___9_startup_c_d3500228____REVSH| PROC
#line 133

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
