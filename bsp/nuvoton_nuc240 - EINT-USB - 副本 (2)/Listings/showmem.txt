; generated by Component: ARM Compiler 5.06 update 3 (build 300) Tool: ArmCC [4d35f0]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\objects\showmem.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\showmem.d --cpu=Cortex-M0 --apcs=interwork --diag_suppress=9931 -I.\Libraries\Device\Nuvoton -I..\..\components\finsh -I.\Libraries\CMSIS\Include -I.\Libraries\StdDriver\inc -I..\..\include -I.\APP -I.\Drivers -I..\..\components\drivers\include -I..\..\components\drivers\include\drivers -I..\nuvoton_nuc240 -I.\Libraries\Device\Nuvoton\NUC230_240\Include -I..\..\include -I..\..\components\drivers\usb\usbdevice\class -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=521 --omf_browse=.\objects\showmem.crf ..\..\libcpu\arm\common\showmem.c]
                          THUMB

                          AREA ||i.rt_hw_show_memory||, CODE, READONLY, ALIGN=2

                  rt_hw_show_memory PROC
;;;16     
;;;17     void rt_hw_show_memory(rt_uint32_t addr, rt_uint32_t size)
000000  b5f8              PUSH     {r3-r7,lr}
;;;18     {
;;;19     	int i = 0, j =0;
;;;20     
;;;21     	RT_ASSERT(addr);
;;;22     
;;;23     	addr = addr & ~0xF;
000002  0905              LSRS     r5,r0,#4
000004  1cc9              ADDS     r1,r1,#3
000006  2600              MOVS     r6,#0                 ;19
000008  012d              LSLS     r5,r5,#4
;;;24     	size = 4*((size + 3)/4);
00000a  088f              LSRS     r7,r1,#2
00000c  00bf              LSLS     r7,r7,#2
00000e  e010              B        |L1.50|
                  |L1.16|
;;;25     
;;;26     	while(i < size)
;;;27     	{
;;;28     		rt_kprintf("0x%08x: ", addr );
000010  4629              MOV      r1,r5
000012  a009              ADR      r0,|L1.56|
000014  f7fffffe          BL       rt_kprintf
;;;29     
;;;30     		for(j=0; j<4; j++)
000018  2400              MOVS     r4,#0
                  |L1.26|
;;;31     		{
;;;32     			rt_kprintf("0x%08x  ", *(rt_uint32_t *)addr);
00001a  a00a              ADR      r0,|L1.68|
00001c  6829              LDR      r1,[r5,#0]
00001e  f7fffffe          BL       rt_kprintf
000022  1c64              ADDS     r4,r4,#1
000024  1d2d              ADDS     r5,r5,#4
000026  1c76              ADDS     r6,r6,#1
000028  2c04              CMP      r4,#4                 ;30
00002a  dbf6              BLT      |L1.26|
;;;33     
;;;34     			addr += 4;
;;;35     			i++;
;;;36     		}
;;;37     
;;;38     		rt_kprintf("\n");
00002c  a008              ADR      r0,|L1.80|
00002e  f7fffffe          BL       rt_kprintf
                  |L1.50|
000032  42be              CMP      r6,r7                 ;26
000034  d3ec              BCC      |L1.16|
;;;39     	}
;;;40     
;;;41     	return;
;;;42     }
000036  bdf8              POP      {r3-r7,pc}
                          ENDP

                  |L1.56|
000038  30782530          DCB      "0x%08x: ",0
00003c  38783a20
000040  00      
000041  00                DCB      0
000042  00                DCB      0
000043  00                DCB      0
                  |L1.68|
000044  30782530          DCB      "0x%08x  ",0
000048  38782020
00004c  00      
00004d  00                DCB      0
00004e  00                DCB      0
00004f  00                DCB      0
                  |L1.80|
000050  0a00              DCB      "\n",0
000052  00                DCB      0
000053  00                DCB      0
