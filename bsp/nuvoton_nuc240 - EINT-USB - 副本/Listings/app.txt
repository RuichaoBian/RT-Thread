; generated by Component: ARM Compiler 5.06 update 3 (build 300) Tool: ArmCC [4d35f0]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\objects\app.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\app.d --cpu=Cortex-M0 --apcs=interwork --diag_suppress=9931 -I.\Libraries\Device\Nuvoton -I..\..\components\finsh -I.\Libraries\CMSIS\Include -I.\Libraries\StdDriver\inc -I..\..\include -I.\APP -I.\Drivers -I..\..\components\drivers\include -I..\..\components\drivers\include\drivers -I..\nuvoton_nuc240 -I.\Libraries\Device\Nuvoton\NUC230_240\Include -I..\..\include -I..\..\components\drivers\usb\usbdevice\class -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=521 -DRT_DEBUG --omf_browse=.\objects\app.crf APP\app.c]
                          THUMB

                          AREA ||i.EINT0_IRQHandler||, CODE, READONLY, ALIGN=2

                  EINT0_IRQHandler PROC
;;;137    }
;;;138    void EINT0_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;139    {
;;;140    	 rt_interrupt_enter();
000002  f7fffffe          BL       rt_interrupt_enter
;;;141        /* For PB.14, clear the INT flag */
;;;142        GPIO_CLR_INT_FLAG(PB, BIT14);
000006  2001              MOVS     r0,#1
000008  490b              LDR      r1,|L1.56|
00000a  0380              LSLS     r0,r0,#14
00000c  6208              STR      r0,[r1,#0x20]
;;;143    		
;;;144    	if(del!=0)
00000e  4c0b              LDR      r4,|L1.60|
000010  8860              LDRH     r0,[r4,#2]  ; del
000012  2800              CMP      r0,#0
000014  d005              BEQ      |L1.34|
;;;145    	{
;;;146    		rt_timer_delete(timer1);
000016  68e0              LDR      r0,[r4,#0xc]  ; timer1
000018  f7fffffe          BL       rt_timer_delete
;;;147    		del--;
00001c  8860              LDRH     r0,[r4,#2]  ; del
00001e  1e40              SUBS     r0,r0,#1
000020  8060              STRH     r0,[r4,#2]
                  |L1.34|
;;;148    	}
;;;149    		rt_hw_led_on();
000022  f7fffffe          BL       rt_hw_led_on
;;;150    		flag = 1;
000026  2001              MOVS     r0,#1
000028  7020              STRB     r0,[r4,#0]
;;;151        rt_kprintf("EINT0 occurred.\n");
00002a  a005              ADR      r0,|L1.64|
00002c  f7fffffe          BL       rt_kprintf
;;;152    	rt_interrupt_leave();
000030  f7fffffe          BL       rt_interrupt_leave
;;;153    }
000034  bd10              POP      {r4,pc}
;;;154    
                          ENDP

000036  0000              DCW      0x0000
                  |L1.56|
                          DCD      0x50004040
                  |L1.60|
                          DCD      ||.data||
                  |L1.64|
000040  45494e54          DCB      "EINT0 occurred.\n",0
000044  30206f63
000048  63757272
00004c  65642e0a
000050  00      
000051  00                DCB      0
000052  00                DCB      0
000053  00                DCB      0

                          AREA ||i.printf_test3||, CODE, READONLY, ALIGN=2

                  printf_test3 PROC
;;;83     */
;;;84     static void printf_test3(void* parameter)
000000  b094              SUB      sp,sp,#0x50
;;;85     {
;;;86     	int i;
;;;87     	char *ptr[20];
;;;88     	for(i = 0;i < 20;i ++)
000002  2000              MOVS     r0,#0
000004  4607              MOV      r7,r0
000006  466e              MOV      r6,sp                 ;87
                  |L2.8|
;;;89     		ptr[i] = RT_NULL;
000008  0081              LSLS     r1,r0,#2
00000a  1c40              ADDS     r0,r0,#1
00000c  5077              STR      r7,[r6,r1]
00000e  2814              CMP      r0,#0x14              ;88
000010  dbfa              BLT      |L2.8|
                  |L2.18|
;;;90     	while(1)
;;;91     	{
;;;92     		for(i = 0;i < 20;i ++)
000012  2400              MOVS     r4,#0
                  |L2.20|
;;;93     		{
;;;94     			
;;;95     			ptr[i] = rt_malloc(1<<i);
000014  2001              MOVS     r0,#1
000016  40a0              LSLS     r0,r0,r4
000018  f7fffffe          BL       rt_malloc
00001c  00a5              LSLS     r5,r4,#2
00001e  5170              STR      r0,[r6,r5]
;;;96     			if(ptr[i] !=RT_NULL)
000020  2800              CMP      r0,#0
000022  d008              BEQ      |L2.54|
000024  4602              MOV      r2,r0
;;;97     			{
;;;98     				rt_kprintf("i= %d,get memory:0x%x\n",i,ptr[i]);
000026  4621              MOV      r1,r4
000028  a005              ADR      r0,|L2.64|
00002a  f7fffffe          BL       rt_kprintf
;;;99     				rt_free(ptr[i]);
00002e  5970              LDR      r0,[r6,r5]
000030  f7fffffe          BL       rt_free
;;;100    				ptr[i] = RT_NULL;
000034  5177              STR      r7,[r6,r5]
                  |L2.54|
000036  1c64              ADDS     r4,r4,#1
000038  2c14              CMP      r4,#0x14              ;92
00003a  dbeb              BLT      |L2.20|
00003c  e7e9              B        |L2.18|
;;;101    			}
;;;102    		}
;;;103    	}
;;;104    }
;;;105    
                          ENDP

00003e  0000              DCW      0x0000
                  |L2.64|
000040  693d2025          DCB      "i= %d,get memory:0x%x\n",0
000044  642c6765
000048  74206d65
00004c  6d6f7279
000050  3a307825
000054  780a00  
000057  00                DCB      0

                          AREA ||i.rt_application_init||, CODE, READONLY, ALIGN=2

                  rt_application_init PROC
;;;105    
;;;106    int rt_application_init()
000000  b51c              PUSH     {r2-r4,lr}
;;;107    {
;;;108    	//int i;
;;;109    	rt_hw_led_init();
000002  f7fffffe          BL       rt_hw_led_init
;;;110    //	for(i = 0;i < 49;i ++)
;;;111    		//{
;;;112    				//ptr[i] = RT_NULL;
;;;113    		//}
;;;114    //	rt_mp_init(&mp,"mp1",&mempool[0],sizeof(mempool),20);
;;;115    	
;;;116    	init_thread1 = rt_thread_create("init1",printf_test3,RT_NULL,512,24,5);
000006  2105              MOVS     r1,#5
000008  2018              MOVS     r0,#0x18
00000a  2301              MOVS     r3,#1
00000c  9101              STR      r1,[sp,#4]
00000e  9000              STR      r0,[sp,#0]
000010  025b              LSLS     r3,r3,#9
000012  2200              MOVS     r2,#0
000014  490a              LDR      r1,|L3.64|
000016  a00b              ADR      r0,|L3.68|
000018  f7fffffe          BL       rt_thread_create
00001c  4c0b              LDR      r4,|L3.76|
;;;117    	
;;;118    	if(init_thread1 != RT_NULL)
00001e  2800              CMP      r0,#0
000020  6060              STR      r0,[r4,#4]  ; init_thread1
000022  d003              BEQ      |L3.44|
;;;119    	{
;;;120    		rt_thread_startup(init_thread1);
000024  f7fffffe          BL       rt_thread_startup
;;;121    		rt_kprintf("thread1 is ok!\n");
000028  a009              ADR      r0,|L3.80|
00002a  e000              B        |L3.46|
                  |L3.44|
;;;122    	}
;;;123    	else
;;;124    		rt_kprintf("thread1 is fail!\n");
00002c  a00c              ADR      r0,|L3.96|
                  |L3.46|
00002e  f7fffffe          BL       rt_kprintf
;;;125    	
;;;126    	//init_thread2 = rt_thread_create("init2",led_off,RT_NULL,512,25,5);
;;;127    	init_thread2 = RT_NULL;
000032  2000              MOVS     r0,#0
;;;128    	if(init_thread2 != RT_NULL)
;;;129    	{
;;;130    		//rt_thread_startup(init_thread2);
;;;131    		rt_kprintf("thread2 is ok!\n");
;;;132    	}
;;;133    	else
;;;134    		rt_kprintf("thread2 is fail!\n");
000034  60a0              STR      r0,[r4,#8]  ; init_thread2
000036  a00f              ADR      r0,|L3.116|
000038  f7fffffe          BL       rt_kprintf
;;;135    	
;;;136    	return 0;
00003c  2000              MOVS     r0,#0
;;;137    }
00003e  bd1c              POP      {r2-r4,pc}
;;;138    void EINT0_IRQHandler(void)
                          ENDP

                  |L3.64|
                          DCD      printf_test3
                  |L3.68|
000044  696e6974          DCB      "init1",0
000048  3100    
00004a  00                DCB      0
00004b  00                DCB      0
                  |L3.76|
                          DCD      ||.data||
                  |L3.80|
000050  74687265          DCB      "thread1 is ok!\n",0
000054  61643120
000058  6973206f
00005c  6b210a00
                  |L3.96|
000060  74687265          DCB      "thread1 is fail!\n",0
000064  61643120
000068  69732066
00006c  61696c21
000070  0a00    
000072  00                DCB      0
000073  00                DCB      0
                  |L3.116|
000074  74687265          DCB      "thread2 is fail!\n",0
000078  61643220
00007c  69732066
000080  61696c21
000084  0a00    
000086  00                DCB      0
000087  00                DCB      0

                          AREA ||.data||, DATA, ALIGN=2

                  flag
000000  0000              DCB      0x00,0x00
                  ||del||
000002  0000              DCW      0x0000
                  init_thread1
                          DCD      0x00000000
                  init_thread2
                          DCD      0x00000000
                  timer1
                          DCD      0x00000000

                          AREA ||area_number.7||, DATA, ALIGN=2

                          EXPORTAS ||area_number.7||, ||.data||
                  timer5
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "APP\\app.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_app_c_flag____REV16|
#line 118 ".\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___5_app_c_flag____REV16| PROC
#line 119

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_app_c_flag____REVSH|
#line 132
|__asm___5_app_c_flag____REVSH| PROC
#line 133

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
