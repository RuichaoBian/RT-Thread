; generated by Component: ARM Compiler 5.06 update 3 (build 300) Tool: ArmCC [4d35f0]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\objects\irq.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\irq.d --cpu=Cortex-M0 --apcs=interwork --diag_suppress=9931 -I.\Libraries\Device\Nuvoton -I..\..\components\finsh -I.\Libraries\CMSIS\Include -I.\Libraries\StdDriver\inc -I..\..\include -I.\APP -I.\Drivers -I..\..\components\drivers\include -I..\..\components\drivers\include\drivers -I..\nuvoton_nuc240 -I.\Libraries\Device\Nuvoton\NUC230_240\Include -I..\..\include -I..\..\components\drivers\usb\usbdevice\class -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=521 -DRT_DEBUG --omf_browse=.\objects\irq.crf ..\..\src\irq.c]
                          THUMB

                          AREA ||i.rt_interrupt_enter||, CODE, READONLY, ALIGN=2

                  rt_interrupt_enter PROC
;;;73      */
;;;74     void rt_interrupt_enter(void)
000000  b510              PUSH     {r4,lr}
;;;75     {
;;;76         rt_base_t level;
;;;77     
;;;78         RT_DEBUG_LOG(RT_DEBUG_IRQ, ("irq coming..., irq nest:%d\n",
;;;79                                     rt_interrupt_nest));
;;;80     
;;;81         level = rt_hw_interrupt_disable();
000002  f7fffffe          BL       rt_hw_interrupt_disable
;;;82         rt_interrupt_nest ++;
000006  4a03              LDR      r2,|L1.20|
000008  7811              LDRB     r1,[r2,#0]  ; rt_interrupt_nest
00000a  1c49              ADDS     r1,r1,#1
00000c  7011              STRB     r1,[r2,#0]
;;;83         RT_OBJECT_HOOK_CALL(rt_interrupt_enter_hook,());
;;;84         rt_hw_interrupt_enable(level);
00000e  f7fffffe          BL       rt_hw_interrupt_enable
;;;85     }
000012  bd10              POP      {r4,pc}
;;;86     RTM_EXPORT(rt_interrupt_enter);
                          ENDP

                  |L1.20|
                          DCD      ||.data||

                          AREA ||i.rt_interrupt_get_nest||, CODE, READONLY, ALIGN=2

                  rt_interrupt_get_nest PROC
;;;116     */
;;;117    rt_uint8_t rt_interrupt_get_nest(void)
000000  4801              LDR      r0,|L2.8|
;;;118    {
;;;119        return rt_interrupt_nest;
000002  7800              LDRB     r0,[r0,#0]  ; rt_interrupt_nest
;;;120    }
000004  4770              BX       lr
;;;121    RTM_EXPORT(rt_interrupt_get_nest);
                          ENDP

000006  0000              DCW      0x0000
                  |L2.8|
                          DCD      ||.data||

                          AREA ||i.rt_interrupt_leave||, CODE, READONLY, ALIGN=2

                  rt_interrupt_leave PROC
;;;94      */
;;;95     void rt_interrupt_leave(void)
000000  b510              PUSH     {r4,lr}
;;;96     {
;;;97         rt_base_t level;
;;;98     
;;;99         RT_DEBUG_LOG(RT_DEBUG_IRQ, ("irq leave, irq nest:%d\n",
;;;100                                    rt_interrupt_nest));
;;;101    
;;;102        level = rt_hw_interrupt_disable();
000002  f7fffffe          BL       rt_hw_interrupt_disable
;;;103        rt_interrupt_nest --;
000006  4a03              LDR      r2,|L3.20|
000008  7811              LDRB     r1,[r2,#0]  ; rt_interrupt_nest
00000a  1e49              SUBS     r1,r1,#1
00000c  7011              STRB     r1,[r2,#0]
;;;104        RT_OBJECT_HOOK_CALL(rt_interrupt_leave_hook,());
;;;105        rt_hw_interrupt_enable(level);
00000e  f7fffffe          BL       rt_hw_interrupt_enable
;;;106    }
000012  bd10              POP      {r4,pc}
;;;107    RTM_EXPORT(rt_interrupt_leave);
                          ENDP

                  |L3.20|
                          DCD      ||.data||

                          AREA ||.data||, DATA, ALIGN=0

                  rt_interrupt_nest
000000  00                DCB      0x00
