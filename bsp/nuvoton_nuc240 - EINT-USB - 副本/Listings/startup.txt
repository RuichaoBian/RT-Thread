; generated by Component: ARM Compiler 5.06 update 3 (build 300) Tool: ArmCC [4d35f0]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\objects\startup.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\startup.d --cpu=Cortex-M0 --apcs=interwork --diag_suppress=9931 -I.\Libraries\Device\Nuvoton -I..\..\components\finsh -I.\Libraries\CMSIS\Include -I.\Libraries\StdDriver\inc -I..\..\include -I.\APP -I.\Drivers -I..\..\components\drivers\include -I..\..\components\drivers\include\drivers -I..\nuvoton_nuc240 -I.\Libraries\Device\Nuvoton\NUC230_240\Include -I..\..\include -I..\..\components\drivers\usb\usbdevice\class -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=521 -DRT_DEBUG --omf_browse=.\objects\startup.crf APP\startup.c]
                          THUMB

                          AREA ||i.NVIC_SetPriority||, CODE, READONLY, ALIGN=2

                  NVIC_SetPriority PROC
;;;570     */
;;;571    __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
000000  0783              LSLS     r3,r0,#30
;;;572    {
;;;573      if(IRQn < 0) {
;;;574        SCB->SHP[_SHP_IDX(IRQn)] = (SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) |
000002  22ff              MOVS     r2,#0xff
000004  0edb              LSRS     r3,r3,#27
000006  409a              LSLS     r2,r2,r3
000008  0789              LSLS     r1,r1,#30
00000a  0e09              LSRS     r1,r1,#24
00000c  4099              LSLS     r1,r1,r3
00000e  2800              CMP      r0,#0                 ;573
000010  da0b              BGE      |L1.42|
000012  0700              LSLS     r0,r0,#28
000014  0f00              LSRS     r0,r0,#28
000016  3808              SUBS     r0,r0,#8
000018  0883              LSRS     r3,r0,#2
00001a  4808              LDR      r0,|L1.60|
00001c  009b              LSLS     r3,r3,#2
00001e  1818              ADDS     r0,r3,r0
000020  69c3              LDR      r3,[r0,#0x1c]
000022  4393              BICS     r3,r3,r2
000024  430b              ORRS     r3,r3,r1
000026  61c3              STR      r3,[r0,#0x1c]
;;;575            (((priority << (8 - __NVIC_PRIO_BITS)) & 0xFF) << _BIT_SHIFT(IRQn)); }
;;;576      else {
;;;577        NVIC->IP[_IP_IDX(IRQn)] = (NVIC->IP[_IP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) |
;;;578            (((priority << (8 - __NVIC_PRIO_BITS)) & 0xFF) << _BIT_SHIFT(IRQn)); }
;;;579    }
000028  4770              BX       lr
                  |L1.42|
00002a  0883              LSRS     r3,r0,#2              ;577
00002c  4804              LDR      r0,|L1.64|
00002e  009b              LSLS     r3,r3,#2              ;577
000030  1818              ADDS     r0,r3,r0              ;577
000032  6803              LDR      r3,[r0,#0]            ;577
000034  4393              BICS     r3,r3,r2              ;577
000036  430b              ORRS     r3,r3,r1              ;577
000038  6003              STR      r3,[r0,#0]            ;577
00003a  4770              BX       lr
;;;580    
                          ENDP

                  |L1.60|
                          DCD      0xe000ed00
                  |L1.64|
                          DCD      0xe000e400

                          AREA ||i.USB_Init||, CODE, READONLY, ALIGN=2

                  USB_Init PROC
;;;45     
;;;46     void USB_Init(void)
000000  b510              PUSH     {r4,lr}
;;;47     {
;;;48     	USBD_Open(&gsInfo, HID_ClassRequest, NULL);
000002  2200              MOVS     r2,#0
000004  4908              LDR      r1,|L2.40|
000006  4809              LDR      r0,|L2.44|
000008  f7fffffe          BL       USBD_Open
;;;49     	HID_Init();
00000c  f7fffffe          BL       HID_Init
;;;50     	USBD_Start();
000010  f7fffffe          BL       USBD_Start
000014  2001              MOVS     r0,#1
000016  4906              LDR      r1,|L2.48|
000018  05c0              LSLS     r0,r0,#23
00001a  6008              STR      r0,[r1,#0]
;;;51     	NVIC_EnableIRQ(USBD_IRQn);
;;;52     	NVIC_SetPriority(USBD_IRQn,5);
00001c  2105              MOVS     r1,#5
00001e  2017              MOVS     r0,#0x17
000020  f7fffffe          BL       NVIC_SetPriority
;;;53     	//HID_UpdateKbData();
;;;54     }
000024  bd10              POP      {r4,pc}
;;;55     
                          ENDP

000026  0000              DCW      0x0000
                  |L2.40|
                          DCD      HID_ClassRequest
                  |L2.44|
                          DCD      gsInfo
                  |L2.48|
                          DCD      0xe000e100

                          AREA ||i.assert_failed||, CODE, READONLY, ALIGN=2

                  assert_failed PROC
;;;35     *******************************************************************************/
;;;36     void assert_failed(uint8_t* file, uint32_t line)
000000  4604              MOV      r4,r0
;;;37     {
000002  460d              MOV      r5,r1
;;;38     	rt_kprintf("\n\r Wrong parameter value detected on\r\n");
000004  a005              ADR      r0,|L3.28|
000006  f7fffffe          BL       rt_kprintf
;;;39     	rt_kprintf("       file  %s\r\n", file);
00000a  4621              MOV      r1,r4
00000c  a00d              ADR      r0,|L3.68|
00000e  f7fffffe          BL       rt_kprintf
;;;40     	rt_kprintf("       line  %d\r\n", line);
000012  4629              MOV      r1,r5
000014  a010              ADR      r0,|L3.88|
000016  f7fffffe          BL       rt_kprintf
                  |L3.26|
;;;41     
;;;42     	while (1) ;
00001a  e7fe              B        |L3.26|
;;;43     }
;;;44     
                          ENDP

                  |L3.28|
00001c  0a0d2057          DCB      "\n\r Wrong parameter value detected on\r\n",0
000020  726f6e67
000024  20706172
000028  616d6574
00002c  65722076
000030  616c7565
000034  20646574
000038  65637465
00003c  64206f6e
000040  0d0a00  
000043  00                DCB      0
                  |L3.68|
000044  20202020          DCB      "       file  %s\r\n",0
000048  20202066
00004c  696c6520
000050  2025730d
000054  0a00    
000056  00                DCB      0
000057  00                DCB      0
                  |L3.88|
000058  20202020          DCB      "       line  %d\r\n",0
00005c  2020206c
000060  696e6520
000064  2025640d
000068  0a00    
00006a  00                DCB      0
00006b  00                DCB      0

                          AREA ||i.main||, CODE, READONLY, ALIGN=1

                  main PROC
;;;96     
;;;97     int main(void)
000000  b510              PUSH     {r4,lr}
;;;98     {
;;;99     	/* disable interrupt first */
;;;100    	rt_hw_interrupt_disable();
000002  f7fffffe          BL       rt_hw_interrupt_disable
;;;101    	
;;;102    	/* startup RT-Thread RTOS */
;;;103    	rtthread_startup();
000006  f7fffffe          BL       rtthread_startup
;;;104    	return 0;
00000a  2000              MOVS     r0,#0
;;;105    }
00000c  bd10              POP      {r4,pc}
;;;106    
                          ENDP


                          AREA ||i.rtthread_startup||, CODE, READONLY, ALIGN=2

                  rtthread_startup PROC
;;;55     
;;;56     void rtthread_startup(void)
000000  b510              PUSH     {r4,lr}
;;;57     {
;;;58     	/* init board */
;;;59     	rt_hw_board_init();
000002  f7fffffe          BL       rt_hw_board_init
;;;60     
;;;61     	/* show version */
;;;62     	rt_show_version();
000006  f7fffffe          BL       rt_show_version
;;;63     	
;;;64     	USB_Init();   //这个函数在调用USBD_Start  里的延时函数时会失能SYStick   
00000a  f7fffffe          BL       USB_Init
;;;65     	SysTick_Config(SystemCoreClock / RT_TICK_PER_SECOND);
00000e  4814              LDR      r0,|L5.96|
000010  2164              MOVS     r1,#0x64
000012  6800              LDR      r0,[r0,#0]  ; SystemCoreClock
000014  f7fffffe          BL       __aeabi_uidivmod
000018  4912              LDR      r1,|L5.100|
00001a  4288              CMP      r0,r1
00001c  d80b              BHI      |L5.54|
00001e  4008              ANDS     r0,r0,r1
000020  4c11              LDR      r4,|L5.104|
000022  1e40              SUBS     r0,r0,#1
000024  6160              STR      r0,[r4,#0x14]
000026  2103              MOVS     r1,#3
000028  1f08              SUBS     r0,r1,#4
00002a  f7fffffe          BL       NVIC_SetPriority
00002e  2000              MOVS     r0,#0
000030  61a0              STR      r0,[r4,#0x18]
000032  2007              MOVS     r0,#7
000034  6120              STR      r0,[r4,#0x10]
                  |L5.54|
;;;66     	/* init tick */
;;;67     	rt_system_tick_init();
000036  f7fffffe          BL       rt_system_tick_init
;;;68     
;;;69     	/* init kernel object */
;;;70     	rt_system_object_init();
00003a  f7fffffe          BL       rt_system_object_init
;;;71     
;;;72     	/* init timer system */
;;;73     	rt_system_timer_init();
00003e  f7fffffe          BL       rt_system_timer_init
;;;74     
;;;75     #ifdef RT_USING_HEAP
;;;76         rt_system_heap_init((void*)NUC240_SRAM_BEGIN, (void*)NUC240_SRAM_END);
000042  490a              LDR      r1,|L5.108|
000044  480a              LDR      r0,|L5.112|
000046  f7fffffe          BL       rt_system_heap_init
;;;77     #endif
;;;78     
;;;79     	/* init scheduler system */
;;;80     	rt_system_scheduler_init();
00004a  f7fffffe          BL       rt_system_scheduler_init
;;;81     
;;;82     	/* init application */
;;;83     	rt_application_init();
00004e  f7fffffe          BL       rt_application_init
;;;84     		
;;;85        /* init timer thread */
;;;86       rt_system_timer_thread_init();
000052  f7fffffe          BL       rt_system_timer_thread_init
;;;87     
;;;88     	/* init idle thread */
;;;89     	rt_thread_idle_init();
000056  f7fffffe          BL       rt_thread_idle_init
;;;90     
;;;91     	
;;;92     	/* start scheduler */
;;;93     	rt_system_scheduler_start();
00005a  f7fffffe          BL       rt_system_scheduler_start
;;;94     
;;;95     }
00005e  bd10              POP      {r4,pc}
;;;96     
                          ENDP

                  |L5.96|
                          DCD      SystemCoreClock
                  |L5.100|
                          DCD      0x00ffffff
                  |L5.104|
                          DCD      0xe000e000
                  |L5.108|
                          DCD      0x20003fff
                  |L5.112|
                          DCD      ||Image$$RW_IRAM1$$ZI$$Limit||

;*** Start embedded assembler ***

#line 1 "APP\\startup.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_startup_c_d3500228____REV16|
#line 118 ".\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___9_startup_c_d3500228____REV16| PROC
#line 119

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_startup_c_d3500228____REVSH|
#line 132
|__asm___9_startup_c_d3500228____REVSH| PROC
#line 133

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
