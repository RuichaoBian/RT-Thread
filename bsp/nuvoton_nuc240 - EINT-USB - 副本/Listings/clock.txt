; generated by Component: ARM Compiler 5.06 update 3 (build 300) Tool: ArmCC [4d35f0]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\objects\clock.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\clock.d --cpu=Cortex-M0 --apcs=interwork --diag_suppress=9931 -I.\Libraries\Device\Nuvoton -I..\..\components\finsh -I.\Libraries\CMSIS\Include -I.\Libraries\StdDriver\inc -I..\..\include -I.\APP -I.\Drivers -I..\..\components\drivers\include -I..\..\components\drivers\include\drivers -I..\nuvoton_nuc240 -I.\Libraries\Device\Nuvoton\NUC230_240\Include -I..\..\include -I..\..\components\drivers\usb\usbdevice\class -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=521 -DRT_DEBUG --omf_browse=.\objects\clock.crf ..\..\src\clock.c]
                          THUMB

                          AREA ||i.rt_system_tick_init||, CODE, READONLY, ALIGN=1

                  rt_system_tick_init PROC
;;;44      */
;;;45     void rt_system_tick_init(void)
000000  4770              BX       lr
;;;46     {
;;;47     }
;;;48     
                          ENDP


                          AREA ||i.rt_tick_from_millisecond||, CODE, READONLY, ALIGN=2

                  rt_tick_from_millisecond PROC
;;;113     */
;;;114    rt_tick_t rt_tick_from_millisecond(rt_uint32_t ms)
000000  2164              MOVS     r1,#0x64
;;;115    {
;;;116        /* return the calculated tick */
;;;117        return (RT_TICK_PER_SECOND * ms + 999) / 1000;
000002  4348              MULS     r0,r1,r0
000004  4903              LDR      r1,|L2.20|
000006  b510              PUSH     {r4,lr}               ;115
000008  1840              ADDS     r0,r0,r1
00000a  1c49              ADDS     r1,r1,#1
00000c  f7fffffe          BL       __aeabi_uidivmod
;;;118    }
000010  bd10              POP      {r4,pc}
;;;119    RTM_EXPORT(rt_tick_from_millisecond);
                          ENDP

000012  0000              DCW      0x0000
                  |L2.20|
                          DCD      0x000003e7

                          AREA ||i.rt_tick_get||, CODE, READONLY, ALIGN=2

                  rt_tick_get PROC
;;;59      */
;;;60     rt_tick_t rt_tick_get(void)
000000  4801              LDR      r0,|L3.8|
;;;61     {
;;;62         /* return the global tick */
;;;63         return rt_tick;
000002  6800              LDR      r0,[r0,#0]  ; rt_tick
;;;64     }
000004  4770              BX       lr
;;;65     RTM_EXPORT(rt_tick_get);
                          ENDP

000006  0000              DCW      0x0000
                  |L3.8|
                          DCD      ||.data||

                          AREA ||i.rt_tick_increase||, CODE, READONLY, ALIGN=2

                  rt_tick_increase PROC
;;;82      */
;;;83     void rt_tick_increase(void)
000000  b510              PUSH     {r4,lr}
;;;84     {
;;;85         struct rt_thread *thread;
;;;86     
;;;87         /* increase the global tick */
;;;88         ++ rt_tick;
000002  4808              LDR      r0,|L4.36|
000004  6801              LDR      r1,[r0,#0]  ; rt_tick
000006  1c49              ADDS     r1,r1,#1
;;;89     
;;;90         /* check time slice */
;;;91         thread = rt_thread_self();
000008  6001              STR      r1,[r0,#0]  ; rt_tick
00000a  f7fffffe          BL       rt_thread_self
;;;92     
;;;93         -- thread->remaining_tick;
00000e  6c81              LDR      r1,[r0,#0x48]
000010  1e49              SUBS     r1,r1,#1
;;;94         if (thread->remaining_tick == 0)
000012  6481              STR      r1,[r0,#0x48]
000014  d103              BNE      |L4.30|
;;;95         {
;;;96             /* change to initialized tick */
;;;97             thread->remaining_tick = thread->init_tick;
000016  6c41              LDR      r1,[r0,#0x44]
;;;98     
;;;99             /* yield */
;;;100            rt_thread_yield();
000018  6481              STR      r1,[r0,#0x48]
00001a  f7fffffe          BL       rt_thread_yield
                  |L4.30|
;;;101        }
;;;102    
;;;103        /* check timer */
;;;104        rt_timer_check();
00001e  f7fffffe          BL       rt_timer_check
;;;105    }
000022  bd10              POP      {r4,pc}
;;;106    
                          ENDP

                  |L4.36|
                          DCD      ||.data||

                          AREA ||i.rt_tick_set||, CODE, READONLY, ALIGN=2

                  rt_tick_set PROC
;;;69      */
;;;70     void rt_tick_set(rt_tick_t tick)
000000  b510              PUSH     {r4,lr}
;;;71     {
000002  4604              MOV      r4,r0
;;;72         rt_base_t level;
;;;73     
;;;74         level = rt_hw_interrupt_disable();
000004  f7fffffe          BL       rt_hw_interrupt_disable
;;;75         rt_tick = tick;
000008  4902              LDR      r1,|L5.20|
;;;76         rt_hw_interrupt_enable(level);
00000a  600c              STR      r4,[r1,#0]  ; rt_tick
00000c  f7fffffe          BL       rt_hw_interrupt_enable
;;;77     }
000010  bd10              POP      {r4,pc}
;;;78     
                          ENDP

000012  0000              DCW      0x0000
                  |L5.20|
                          DCD      ||.data||

                          AREA ||.data||, DATA, ALIGN=2

                  rt_tick
                          DCD      0x00000000
