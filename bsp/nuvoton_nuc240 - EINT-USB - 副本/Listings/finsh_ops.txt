; generated by Component: ARM Compiler 5.06 update 3 (build 300) Tool: ArmCC [4d35f0]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\objects\finsh_ops.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\finsh_ops.d --cpu=Cortex-M0 --apcs=interwork --diag_suppress=9931 -I.\Libraries\Device\Nuvoton -I..\..\components\finsh -I.\Libraries\CMSIS\Include -I.\Libraries\StdDriver\inc -I..\..\include -I.\APP -I.\Drivers -I..\..\components\drivers\include -I..\..\components\drivers\include\drivers -I..\nuvoton_nuc240 -I.\Libraries\Device\Nuvoton\NUC230_240\Include -I..\..\include -I..\..\components\drivers\usb\usbdevice\class -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=521 -DRT_DEBUG --omf_browse=.\objects\finsh_ops.crf ..\..\components\finsh\finsh_ops.c]
                          THUMB

                          AREA ||i.OP_add_byte||, CODE, READONLY, ALIGN=2

                  OP_add_byte PROC
;;;54     /* --- add --- */
;;;55     void OP_add_byte()
000000  b510              PUSH     {r4,lr}
;;;56     {
;;;57         OP_BIN_BYTE(+);
000002  4a05              LDR      r2,|L1.24|
000004  6810              LDR      r0,[r2,#0]  ; finsh_sp
000006  4601              MOV      r1,r0
000008  3820              SUBS     r0,r0,#0x20
00000a  7e03              LDRB     r3,[r0,#0x18]
00000c  7f04              LDRB     r4,[r0,#0x1c]
00000e  191b              ADDS     r3,r3,r4
000010  7603              STRB     r3,[r0,#0x18]
000012  1f09              SUBS     r1,r1,#4
000014  6011              STR      r1,[r2,#0]  ; finsh_sp
;;;58     
;;;59     	return ;
;;;60     }
000016  bd10              POP      {r4,pc}
;;;61     
                          ENDP

                  |L1.24|
                          DCD      finsh_sp

                          AREA ||i.OP_add_dword||, CODE, READONLY, ALIGN=2

                  OP_add_dword PROC
;;;68     
;;;69     void OP_add_dword()
000000  b510              PUSH     {r4,lr}
;;;70     {
;;;71         OP_BIN_DWORD(+);
000002  4a05              LDR      r2,|L2.24|
000004  6810              LDR      r0,[r2,#0]  ; finsh_sp
000006  4601              MOV      r1,r0
000008  3880              SUBS     r0,r0,#0x80
00000a  6fc4              LDR      r4,[r0,#0x7c]
00000c  6f83              LDR      r3,[r0,#0x78]
00000e  191b              ADDS     r3,r3,r4
000010  1f09              SUBS     r1,r1,#4
000012  6783              STR      r3,[r0,#0x78]
000014  6011              STR      r1,[r2,#0]  ; finsh_sp
;;;72     
;;;73     	return ;
;;;74     }
000016  bd10              POP      {r4,pc}
;;;75     
                          ENDP

                  |L2.24|
                          DCD      finsh_sp

                          AREA ||i.OP_add_word||, CODE, READONLY, ALIGN=2

                  OP_add_word PROC
;;;61     
;;;62     void OP_add_word()
000000  b510              PUSH     {r4,lr}
;;;63     {
;;;64         OP_BIN_WORD(+);
000002  4a05              LDR      r2,|L3.24|
000004  6810              LDR      r0,[r2,#0]  ; finsh_sp
000006  4601              MOV      r1,r0
000008  3840              SUBS     r0,r0,#0x40
00000a  8f03              LDRH     r3,[r0,#0x38]
00000c  8f84              LDRH     r4,[r0,#0x3c]
00000e  191b              ADDS     r3,r3,r4
000010  8703              STRH     r3,[r0,#0x38]
000012  1f09              SUBS     r1,r1,#4
000014  6011              STR      r1,[r2,#0]  ; finsh_sp
;;;65     
;;;66     	return ;
;;;67     }
000016  bd10              POP      {r4,pc}
;;;68     
                          ENDP

                  |L3.24|
                          DCD      finsh_sp

                          AREA ||i.OP_and_byte||, CODE, READONLY, ALIGN=2

                  OP_and_byte PROC
;;;164    /* --- and --- */
;;;165    void OP_and_byte()
000000  b510              PUSH     {r4,lr}
;;;166    {
;;;167    	OP_BIN_BYTE(&);
000002  4a05              LDR      r2,|L4.24|
000004  6810              LDR      r0,[r2,#0]  ; finsh_sp
000006  4601              MOV      r1,r0
000008  3820              SUBS     r0,r0,#0x20
00000a  7e03              LDRB     r3,[r0,#0x18]
00000c  7f04              LDRB     r4,[r0,#0x1c]
00000e  4023              ANDS     r3,r3,r4
000010  7603              STRB     r3,[r0,#0x18]
000012  1f09              SUBS     r1,r1,#4
000014  6011              STR      r1,[r2,#0]  ; finsh_sp
;;;168    
;;;169    	return ;
;;;170    }
000016  bd10              POP      {r4,pc}
;;;171    
                          ENDP

                  |L4.24|
                          DCD      finsh_sp

                          AREA ||i.OP_and_dword||, CODE, READONLY, ALIGN=2

                  OP_and_dword PROC
;;;178    
;;;179    void OP_and_dword()
000000  b510              PUSH     {r4,lr}
;;;180    {
;;;181    	OP_BIN_DWORD(&);
000002  4a05              LDR      r2,|L5.24|
000004  6810              LDR      r0,[r2,#0]  ; finsh_sp
000006  4601              MOV      r1,r0
000008  3880              SUBS     r0,r0,#0x80
00000a  6fc4              LDR      r4,[r0,#0x7c]
00000c  6f83              LDR      r3,[r0,#0x78]
00000e  4023              ANDS     r3,r3,r4
000010  1f09              SUBS     r1,r1,#4
000012  6783              STR      r3,[r0,#0x78]
000014  6011              STR      r1,[r2,#0]  ; finsh_sp
;;;182    
;;;183    	return ;
;;;184    }
000016  bd10              POP      {r4,pc}
;;;185    
                          ENDP

                  |L5.24|
                          DCD      finsh_sp

                          AREA ||i.OP_and_word||, CODE, READONLY, ALIGN=2

                  OP_and_word PROC
;;;171    
;;;172    void OP_and_word()
000000  b510              PUSH     {r4,lr}
;;;173    {
;;;174    	OP_BIN_WORD(&);
000002  4a05              LDR      r2,|L6.24|
000004  6810              LDR      r0,[r2,#0]  ; finsh_sp
000006  4601              MOV      r1,r0
000008  3840              SUBS     r0,r0,#0x40
00000a  8f03              LDRH     r3,[r0,#0x38]
00000c  8f84              LDRH     r4,[r0,#0x3c]
00000e  4023              ANDS     r3,r3,r4
000010  8703              STRH     r3,[r0,#0x38]
000012  1f09              SUBS     r1,r1,#4
000014  6011              STR      r1,[r2,#0]  ; finsh_sp
;;;175    
;;;176    	return ;
;;;177    }
000016  bd10              POP      {r4,pc}
;;;178    
                          ENDP

                  |L6.24|
                          DCD      finsh_sp

                          AREA ||i.OP_bw_byte||, CODE, READONLY, ALIGN=2

                  OP_bw_byte PROC
;;;230    /* --- bw --- */
;;;231    void OP_bw_byte()
000000  4803              LDR      r0,|L7.16|
;;;232    {
;;;233    	(finsh_sp - 1)->char_value = ~ ((finsh_sp - 1)->char_value);
000002  6800              LDR      r0,[r0,#0]  ; finsh_sp
000004  3820              SUBS     r0,r0,#0x20
000006  7f01              LDRB     r1,[r0,#0x1c]
000008  43c9              MVNS     r1,r1
00000a  7701              STRB     r1,[r0,#0x1c]
;;;234    
;;;235    	return ;
;;;236    }
00000c  4770              BX       lr
;;;237    
                          ENDP

00000e  0000              DCW      0x0000
                  |L7.16|
                          DCD      finsh_sp

                          AREA ||i.OP_bw_dword||, CODE, READONLY, ALIGN=2

                  OP_bw_dword PROC
;;;244    
;;;245    void OP_bw_dword()
000000  4803              LDR      r0,|L8.16|
;;;246    {
;;;247    	(finsh_sp - 1)->long_value = ~ ((finsh_sp - 1)->long_value);
000002  6800              LDR      r0,[r0,#0]  ; finsh_sp
000004  3880              SUBS     r0,r0,#0x80
000006  6fc1              LDR      r1,[r0,#0x7c]
000008  43c9              MVNS     r1,r1
00000a  67c1              STR      r1,[r0,#0x7c]
;;;248    
;;;249    	return ;
;;;250    }
00000c  4770              BX       lr
;;;251    
                          ENDP

00000e  0000              DCW      0x0000
                  |L8.16|
                          DCD      finsh_sp

                          AREA ||i.OP_bw_word||, CODE, READONLY, ALIGN=2

                  OP_bw_word PROC
;;;237    
;;;238    void OP_bw_word()
000000  4803              LDR      r0,|L9.16|
;;;239    {
;;;240    	(finsh_sp - 1)->short_value = ~ ((finsh_sp - 1)->short_value);
000002  6800              LDR      r0,[r0,#0]  ; finsh_sp
000004  3840              SUBS     r0,r0,#0x40
000006  8f81              LDRH     r1,[r0,#0x3c]
000008  43c9              MVNS     r1,r1
00000a  8781              STRH     r1,[r0,#0x3c]
;;;241    
;;;242    	return ;
;;;243    }
00000c  4770              BX       lr
;;;244    
                          ENDP

00000e  0000              DCW      0x0000
                  |L9.16|
                          DCD      finsh_sp

                          AREA ||i.OP_call||, CODE, READONLY, ALIGN=2

                  OP_call PROC
;;;443    /* --- call --- */
;;;444    void OP_call()
000000  b570              PUSH     {r4-r6,lr}
;;;445    {
;;;446    	/* the max number of arg*/
;;;447    	unsigned long parameterv[16];
;;;448    	unsigned int  parameters, i;
;;;449    
;;;450    	typedef unsigned long var_t;
;;;451    	typedef var_t (*op_func)();
;;;452    	op_func f;
;;;453    	var_t   r;
;;;454    
;;;455    	parameters = *finsh_pc ++;
000002  4a63              LDR      r2,|L10.400|
000004  b09c              SUB      sp,sp,#0x70           ;445
000006  6810              LDR      r0,[r2,#0]  ; finsh_pc
;;;456    
;;;457    	i = 0; finsh_sp --;
000008  4d62              LDR      r5,|L10.404|
00000a  7801              LDRB     r1,[r0,#0]            ;455
00000c  1c40              ADDS     r0,r0,#1              ;455
00000e  6010              STR      r0,[r2,#0]  ; finsh_pc
000010  682a              LDR      r2,[r5,#0]  ; finsh_sp
000012  2000              MOVS     r0,#0
000014  1f12              SUBS     r2,r2,#4
000016  ab0c              ADD      r3,sp,#0x30           ;447
000018  602a              STR      r2,[r5,#0]            ;445  ; finsh_sp
00001a  e007              B        |L10.44|
                  |L10.28|
;;;458    	while (i < parameters)
;;;459    	{
;;;460    		parameterv[parameters - 1 - i] = finsh_sp->long_value;
00001c  1a0e              SUBS     r6,r1,r0
00001e  00b6              LSLS     r6,r6,#2
000020  18f6              ADDS     r6,r6,r3
000022  3e80              SUBS     r6,r6,#0x80
000024  1f12              SUBS     r2,r2,#4
;;;461    		finsh_sp --;
000026  67f4              STR      r4,[r6,#0x7c]
000028  1c40              ADDS     r0,r0,#1
00002a  602a              STR      r2,[r5,#0]  ; finsh_sp
                  |L10.44|
00002c  6814              LDR      r4,[r2,#0]            ;458
00002e  4288              CMP      r0,r1                 ;458
000030  d3f4              BCC      |L10.28|
;;;462    		i++;
;;;463    	}
;;;464    
;;;465    	f = (op_func)(finsh_sp->long_value);
;;;466    	switch (parameters)
000032  000b              MOVS     r3,r1
000034  f7fffffe          BL       __ARM_common_switch8
000038  110a0c0f          DCB      0x11,0x0a,0x0c,0x0f
00003c  13171b21          DCB      0x13,0x17,0x1b,0x21
000040  29313943          DCB      0x29,0x31,0x39,0x43
000044  4f5b6775          DCB      0x4f,0x5b,0x67,0x75
000048  8595a500          DCB      0x85,0x95,0xa5,0x00
;;;467    	{
;;;468    	case 0:
;;;469    		r = f(0);
00004c  2000              MOVS     r0,#0
;;;470    		break;
00004e  e000              B        |L10.82|
;;;471    
;;;472    	case 1:
;;;473    		r = f(parameterv[0]);
000050  980c              LDR      r0,[sp,#0x30]
                  |L10.82|
000052  47a0              BLX      r4                    ;469
000054  e096              B        |L10.388|
;;;474    		break;
;;;475    
;;;476    	case 2:
;;;477    		r = f(parameterv[0], parameterv[1]);
000056  990d              LDR      r1,[sp,#0x34]
000058  980c              LDR      r0,[sp,#0x30]
00005a  47a0              BLX      r4
;;;478    		break;
00005c  e092              B        |L10.388|
00005e  ab0c              ADD      r3,sp,#0x30
000060  cb07              LDM      r3!,{r0-r2}
;;;479    
;;;480    	case 3:
;;;481    		r = f(parameterv[0], parameterv[1], parameterv[2]);
000062  47a0              BLX      r4
;;;482    		break;
000064  e08e              B        |L10.388|
000066  ae0c              ADD      r6,sp,#0x30
000068  ce0f              LDM      r6!,{r0-r3}
;;;483    
;;;484    	case 4:
;;;485    		r = f(parameterv[0], parameterv[1], parameterv[2], parameterv[3]);
00006a  47a0              BLX      r4
;;;486    		break;
00006c  e08a              B        |L10.388|
;;;487    
;;;488    	case 5:
;;;489    		r = f(parameterv[0], parameterv[1], parameterv[2], parameterv[3],
00006e  9810              LDR      r0,[sp,#0x40]
000070  ae0c              ADD      r6,sp,#0x30
000072  9000              STR      r0,[sp,#0]
000074  ce0f              LDM      r6!,{r0-r3}
000076  47a0              BLX      r4
;;;490    				parameterv[4]);
;;;491    		break;
000078  e084              B        |L10.388|
;;;492    
;;;493    	case 6:
;;;494    		r = f(parameterv[0], parameterv[1], parameterv[2], parameterv[3],
00007a  9810              LDR      r0,[sp,#0x40]
00007c  9911              LDR      r1,[sp,#0x44]
00007e  ae0c              ADD      r6,sp,#0x30
000080  9101              STR      r1,[sp,#4]
000082  9000              STR      r0,[sp,#0]
000084  ce0f              LDM      r6!,{r0-r3}
000086  47a0              BLX      r4
;;;495    				parameterv[4], parameterv[5]);
;;;496    		break;
000088  e07c              B        |L10.388|
00008a  ab10              ADD      r3,sp,#0x40
00008c  cb07              LDM      r3!,{r0-r2}
00008e  466b              MOV      r3,sp
000090  c307              STM      r3!,{r0-r2}
000092  ae0c              ADD      r6,sp,#0x30
000094  ce0f              LDM      r6!,{r0-r3}
;;;497    
;;;498    	case 7:
;;;499    		r = f(parameterv[0], parameterv[1], parameterv[2], parameterv[3],
000096  47a0              BLX      r4
;;;500    				parameterv[4], parameterv[5], parameterv[6]);
;;;501    		break;
000098  e074              B        |L10.388|
00009a  ae10              ADD      r6,sp,#0x40
00009c  ce0f              LDM      r6!,{r0-r3}
00009e  466e              MOV      r6,sp
0000a0  c60f              STM      r6!,{r0-r3}
0000a2  ae0c              ADD      r6,sp,#0x30
0000a4  ce0f              LDM      r6!,{r0-r3}
;;;502    
;;;503    	case 8:
;;;504    		r = f(parameterv[0], parameterv[1], parameterv[2], parameterv[3],
0000a6  47a0              BLX      r4
;;;505    				parameterv[4], parameterv[5], parameterv[6], parameterv[7]);
;;;506    		break;
0000a8  e06c              B        |L10.388|
0000aa  ae11              ADD      r6,sp,#0x44
0000ac  ce0f              LDM      r6!,{r0-r3}
0000ae  ae01              ADD      r6,sp,#4
0000b0  c60f              STM      r6!,{r0-r3}
;;;507    
;;;508    	case 9:
;;;509    		r = f(parameterv[0], parameterv[1], parameterv[2], parameterv[3],
0000b2  9810              LDR      r0,[sp,#0x40]
0000b4  ae0c              ADD      r6,sp,#0x30
0000b6  9000              STR      r0,[sp,#0]
0000b8  ce0f              LDM      r6!,{r0-r3}
0000ba  47a0              BLX      r4
;;;510    				parameterv[4], parameterv[5], parameterv[6], parameterv[7],
;;;511    				parameterv[8]);
;;;512    		break;
0000bc  e062              B        |L10.388|
0000be  ae12              ADD      r6,sp,#0x48
0000c0  ce0f              LDM      r6!,{r0-r3}
0000c2  ae02              ADD      r6,sp,#8
0000c4  c60f              STM      r6!,{r0-r3}
;;;513    
;;;514    	case 10:
;;;515    		r = f(parameterv[0], parameterv[1], parameterv[2], parameterv[3],
0000c6  9810              LDR      r0,[sp,#0x40]
0000c8  9911              LDR      r1,[sp,#0x44]
0000ca  ae0c              ADD      r6,sp,#0x30
0000cc  9101              STR      r1,[sp,#4]
0000ce  9000              STR      r0,[sp,#0]
0000d0  ce0f              LDM      r6!,{r0-r3}
0000d2  47a0              BLX      r4
;;;516    				parameterv[4], parameterv[5], parameterv[6], parameterv[7],
;;;517    				parameterv[8], parameterv[9]);
;;;518    		break;
0000d4  e056              B        |L10.388|
0000d6  ae13              ADD      r6,sp,#0x4c
0000d8  ce0f              LDM      r6!,{r0-r3}
0000da  ae03              ADD      r6,sp,#0xc
0000dc  c60f              STM      r6!,{r0-r3}
0000de  ab10              ADD      r3,sp,#0x40
0000e0  cb07              LDM      r3!,{r0-r2}
0000e2  466b              MOV      r3,sp
0000e4  c307              STM      r3!,{r0-r2}
0000e6  ae0c              ADD      r6,sp,#0x30
0000e8  ce0f              LDM      r6!,{r0-r3}
;;;519    
;;;520    	case 11:
;;;521    		r = f(parameterv[0], parameterv[1], parameterv[2], parameterv[3],
0000ea  47a0              BLX      r4
;;;522    				parameterv[4], parameterv[5], parameterv[6], parameterv[7],
;;;523    				parameterv[8], parameterv[9], parameterv[10]);
;;;524    		break;
0000ec  e04a              B        |L10.388|
0000ee  ae14              ADD      r6,sp,#0x50
0000f0  ce0f              LDM      r6!,{r0-r3}
0000f2  ae04              ADD      r6,sp,#0x10
0000f4  c60f              STM      r6!,{r0-r3}
0000f6  ae10              ADD      r6,sp,#0x40
0000f8  ce0f              LDM      r6!,{r0-r3}
0000fa  466e              MOV      r6,sp
0000fc  c60f              STM      r6!,{r0-r3}
0000fe  ae0c              ADD      r6,sp,#0x30
000100  ce0f              LDM      r6!,{r0-r3}
;;;525    
;;;526    	case 12:
;;;527    		r = f(parameterv[0], parameterv[1], parameterv[2], parameterv[3],
000102  47a0              BLX      r4
;;;528    				parameterv[4], parameterv[5], parameterv[6], parameterv[7],
;;;529    				parameterv[8], parameterv[9], parameterv[10], parameterv[11]);
;;;530    		break;
000104  e03e              B        |L10.388|
000106  ae15              ADD      r6,sp,#0x54
000108  ce0f              LDM      r6!,{r0-r3}
00010a  ae05              ADD      r6,sp,#0x14
00010c  c60f              STM      r6!,{r0-r3}
00010e  ae11              ADD      r6,sp,#0x44
000110  ce0f              LDM      r6!,{r0-r3}
000112  ae01              ADD      r6,sp,#4
000114  c60f              STM      r6!,{r0-r3}
;;;531    
;;;532    	case 13:
;;;533    		r = f(parameterv[0], parameterv[1], parameterv[2], parameterv[3],
000116  9810              LDR      r0,[sp,#0x40]
000118  ae0c              ADD      r6,sp,#0x30
00011a  9000              STR      r0,[sp,#0]
00011c  ce0f              LDM      r6!,{r0-r3}
00011e  47a0              BLX      r4
;;;534    				parameterv[4], parameterv[5], parameterv[6], parameterv[7],
;;;535    				parameterv[8], parameterv[9], parameterv[10], parameterv[11],
;;;536    				parameterv[12]);
;;;537    		break;
000120  e030              B        |L10.388|
000122  ae16              ADD      r6,sp,#0x58
000124  ce0f              LDM      r6!,{r0-r3}
000126  ae06              ADD      r6,sp,#0x18
000128  c60f              STM      r6!,{r0-r3}
00012a  ae12              ADD      r6,sp,#0x48
00012c  ce0f              LDM      r6!,{r0-r3}
00012e  ae02              ADD      r6,sp,#8
000130  c60f              STM      r6!,{r0-r3}
;;;538    
;;;539    	case 14:
;;;540    		r = f(parameterv[0], parameterv[1], parameterv[2], parameterv[3],
000132  9810              LDR      r0,[sp,#0x40]
000134  9911              LDR      r1,[sp,#0x44]
000136  ae0c              ADD      r6,sp,#0x30
000138  9101              STR      r1,[sp,#4]
00013a  9000              STR      r0,[sp,#0]
00013c  ce0f              LDM      r6!,{r0-r3}
00013e  47a0              BLX      r4
;;;541    				parameterv[4], parameterv[5], parameterv[6], parameterv[7],
;;;542    				parameterv[8], parameterv[9], parameterv[10], parameterv[11],
;;;543    				parameterv[12], parameterv[13]);
;;;544    		break;
000140  e020              B        |L10.388|
000142  ae17              ADD      r6,sp,#0x5c
000144  ce0f              LDM      r6!,{r0-r3}
000146  ae07              ADD      r6,sp,#0x1c
000148  c60f              STM      r6!,{r0-r3}
00014a  ae13              ADD      r6,sp,#0x4c
00014c  ce0f              LDM      r6!,{r0-r3}
00014e  ae03              ADD      r6,sp,#0xc
000150  c60f              STM      r6!,{r0-r3}
000152  ab10              ADD      r3,sp,#0x40
000154  cb07              LDM      r3!,{r0-r2}
000156  466b              MOV      r3,sp
000158  c307              STM      r3!,{r0-r2}
00015a  ae0c              ADD      r6,sp,#0x30
00015c  ce0f              LDM      r6!,{r0-r3}
;;;545    
;;;546    	case 15:
;;;547    		r = f(parameterv[0], parameterv[1], parameterv[2], parameterv[3],
00015e  47a0              BLX      r4
;;;548    				parameterv[4], parameterv[5], parameterv[6], parameterv[7],
;;;549    				parameterv[8], parameterv[9], parameterv[10], parameterv[11],
;;;550    				parameterv[12], parameterv[13], parameterv[14]);
;;;551    		break;
000160  e010              B        |L10.388|
000162  ae18              ADD      r6,sp,#0x60
000164  ce0f              LDM      r6!,{r0-r3}
000166  ae08              ADD      r6,sp,#0x20
000168  c60f              STM      r6!,{r0-r3}
00016a  ae14              ADD      r6,sp,#0x50
00016c  ce0f              LDM      r6!,{r0-r3}
00016e  ae04              ADD      r6,sp,#0x10
000170  c60f              STM      r6!,{r0-r3}
000172  ae10              ADD      r6,sp,#0x40
000174  ce0f              LDM      r6!,{r0-r3}
000176  466e              MOV      r6,sp
000178  c60f              STM      r6!,{r0-r3}
00017a  ae0c              ADD      r6,sp,#0x30
00017c  ce0f              LDM      r6!,{r0-r3}
;;;552    
;;;553    	case 16:
;;;554    		r = f(parameterv[0], parameterv[1], parameterv[2], parameterv[3],
00017e  47a0              BLX      r4
;;;555    				parameterv[4], parameterv[5], parameterv[6], parameterv[7],
;;;556    				parameterv[8], parameterv[9], parameterv[10], parameterv[11],
;;;557    				parameterv[12], parameterv[13], parameterv[14], parameterv[15]);
;;;558    		break;
000180  e000              B        |L10.388|
;;;559    
;;;560    	default:
;;;561    		r = 0;
000182  2000              MOVS     r0,#0
                  |L10.388|
;;;562    		break;
;;;563    	}
;;;564    
;;;565    	finsh_sp->long_value = r;
000184  6829              LDR      r1,[r5,#0]  ; finsh_sp
000186  c101              STM      r1!,{r0}
;;;566    	finsh_sp ++;
000188  6029              STR      r1,[r5,#0]  ; finsh_sp
;;;567    
;;;568    	return ;
;;;569    }
00018a  b01c              ADD      sp,sp,#0x70
00018c  bd70              POP      {r4-r6,pc}
;;;570    
                          ENDP

00018e  0000              DCW      0x0000
                  |L10.400|
                          DCD      finsh_pc
                  |L10.404|
                          DCD      finsh_sp

                          AREA ||i.OP_div_byte||, CODE, READONLY, ALIGN=2

                  OP_div_byte PROC
;;;98     /* --- div --- */
;;;99     void OP_div_byte()
000000  b570              PUSH     {r4-r6,lr}
;;;100    {
;;;101    	OP_BIN_BYTE(/);
000002  4d06              LDR      r5,|L11.28|
000004  682c              LDR      r4,[r5,#0]  ; finsh_sp
000006  4626              MOV      r6,r4
000008  3c20              SUBS     r4,r4,#0x20
00000a  7f21              LDRB     r1,[r4,#0x1c]
00000c  7e20              LDRB     r0,[r4,#0x18]
00000e  f7fffffe          BL       __aeabi_uidivmod
000012  7620              STRB     r0,[r4,#0x18]
000014  1f36              SUBS     r6,r6,#4
000016  602e              STR      r6,[r5,#0]  ; finsh_sp
;;;102    
;;;103    	return ;
;;;104    }
000018  bd70              POP      {r4-r6,pc}
;;;105    
                          ENDP

00001a  0000              DCW      0x0000
                  |L11.28|
                          DCD      finsh_sp

                          AREA ||i.OP_div_dword||, CODE, READONLY, ALIGN=2

                  OP_div_dword PROC
;;;112    
;;;113    void OP_div_dword()
000000  b570              PUSH     {r4-r6,lr}
;;;114    {
;;;115    	OP_BIN_DWORD(/);
000002  4d06              LDR      r5,|L12.28|
000004  682c              LDR      r4,[r5,#0]  ; finsh_sp
000006  4626              MOV      r6,r4
000008  3c80              SUBS     r4,r4,#0x80
00000a  6fe1              LDR      r1,[r4,#0x7c]
00000c  6fa0              LDR      r0,[r4,#0x78]
00000e  f7fffffe          BL       __aeabi_idivmod
000012  1f36              SUBS     r6,r6,#4
000014  67a0              STR      r0,[r4,#0x78]
000016  602e              STR      r6,[r5,#0]  ; finsh_sp
;;;116    
;;;117    	return ;
;;;118    }
000018  bd70              POP      {r4-r6,pc}
;;;119    
                          ENDP

00001a  0000              DCW      0x0000
                  |L12.28|
                          DCD      finsh_sp

                          AREA ||i.OP_div_word||, CODE, READONLY, ALIGN=2

                  OP_div_word PROC
;;;105    
;;;106    void OP_div_word()
000000  b570              PUSH     {r4-r6,lr}
;;;107    {
;;;108    	OP_BIN_WORD(/);
000002  4d07              LDR      r5,|L13.32|
000004  213c              MOVS     r1,#0x3c
000006  682c              LDR      r4,[r5,#0]  ; finsh_sp
000008  2038              MOVS     r0,#0x38
00000a  4626              MOV      r6,r4
00000c  3c40              SUBS     r4,r4,#0x40
00000e  5e61              LDRSH    r1,[r4,r1]
000010  5e20              LDRSH    r0,[r4,r0]
000012  f7fffffe          BL       __aeabi_idivmod
000016  8720              STRH     r0,[r4,#0x38]
000018  1f36              SUBS     r6,r6,#4
00001a  602e              STR      r6,[r5,#0]  ; finsh_sp
;;;109    
;;;110    	return ;
;;;111    }
00001c  bd70              POP      {r4-r6,pc}
;;;112    
                          ENDP

00001e  0000              DCW      0x0000
                  |L13.32|
                          DCD      finsh_sp

                          AREA ||i.OP_ld_byte||, CODE, READONLY, ALIGN=2

                  OP_ld_byte PROC
;;;296    /* --- ld --- */
;;;297    void OP_ld_byte()
000000  4905              LDR      r1,|L14.24|
;;;298    {
;;;299    	finsh_sp->char_value = *finsh_pc;
000002  4a06              LDR      r2,|L14.28|
000004  6808              LDR      r0,[r1,#0]  ; finsh_pc
000006  7803              LDRB     r3,[r0,#0]
000008  6810              LDR      r0,[r2,#0]  ; finsh_sp
00000a  7003              STRB     r3,[r0,#0]
00000c  1d00              ADDS     r0,r0,#4
;;;300    
;;;301    	finsh_sp++;
;;;302    	finsh_pc++;
00000e  6010              STR      r0,[r2,#0]  ; finsh_sp
000010  6808              LDR      r0,[r1,#0]  ; finsh_pc
000012  1c40              ADDS     r0,r0,#1
000014  6008              STR      r0,[r1,#0]  ; finsh_pc
;;;303    
;;;304    	return ;
;;;305    }
000016  4770              BX       lr
;;;306    
                          ENDP

                  |L14.24|
                          DCD      finsh_pc
                  |L14.28|
                          DCD      finsh_sp

                          AREA ||i.OP_ld_dword||, CODE, READONLY, ALIGN=2

                  OP_ld_dword PROC
;;;316    
;;;317    void OP_ld_dword()
000000  b570              PUSH     {r4-r6,lr}
;;;318    {
;;;319    	finsh_sp->long_value = FINSH_GET32(finsh_pc);
000002  4c09              LDR      r4,|L15.40|
000004  6820              LDR      r0,[r4,#0]  ; finsh_pc
000006  4605              MOV      r5,r0
000008  f7fffffe          BL       __aeabi_uread4
00000c  0202              LSLS     r2,r0,#8
00000e  78e8              LDRB     r0,[r5,#3]
000010  0a12              LSRS     r2,r2,#8
000012  0600              LSLS     r0,r0,#24
000014  4905              LDR      r1,|L15.44|
000016  4302              ORRS     r2,r2,r0
000018  6808              LDR      r0,[r1,#0]  ; finsh_sp
00001a  c004              STM      r0!,{r2}
;;;320    
;;;321    	finsh_sp ++;
;;;322    	finsh_pc += 4;
00001c  6008              STR      r0,[r1,#0]  ; finsh_sp
00001e  6820              LDR      r0,[r4,#0]  ; finsh_pc
000020  1d00              ADDS     r0,r0,#4
000022  6020              STR      r0,[r4,#0]  ; finsh_pc
;;;323    
;;;324    	return ;
;;;325    }
000024  bd70              POP      {r4-r6,pc}
;;;326    
                          ENDP

000026  0000              DCW      0x0000
                  |L15.40|
                          DCD      finsh_pc
                  |L15.44|
                          DCD      finsh_sp

                          AREA ||i.OP_ld_value_byte||, CODE, READONLY, ALIGN=2

                  OP_ld_value_byte PROC
;;;326    
;;;327    void OP_ld_value_byte()
000000  b570              PUSH     {r4-r6,lr}
;;;328    {
;;;329    	char* c;
;;;330    
;;;331    	c = (char*) (FINSH_GET32(finsh_pc));
000002  4c0a              LDR      r4,|L16.44|
000004  6820              LDR      r0,[r4,#0]  ; finsh_pc
000006  4605              MOV      r5,r0
000008  f7fffffe          BL       __aeabi_uread4
00000c  0201              LSLS     r1,r0,#8
00000e  78e8              LDRB     r0,[r5,#3]
000010  0a09              LSRS     r1,r1,#8
000012  0600              LSLS     r0,r0,#24
000014  4301              ORRS     r1,r1,r0
;;;332    
;;;333    	finsh_sp->char_value = *c;
000016  780a              LDRB     r2,[r1,#0]
000018  4905              LDR      r1,|L16.48|
00001a  6808              LDR      r0,[r1,#0]  ; finsh_sp
00001c  7002              STRB     r2,[r0,#0]
00001e  1d00              ADDS     r0,r0,#4
;;;334    
;;;335    	finsh_sp ++;
;;;336    	finsh_pc += 4;
000020  6008              STR      r0,[r1,#0]  ; finsh_sp
000022  6820              LDR      r0,[r4,#0]  ; finsh_pc
000024  1d00              ADDS     r0,r0,#4
000026  6020              STR      r0,[r4,#0]  ; finsh_pc
;;;337    
;;;338    	return;
;;;339    }
000028  bd70              POP      {r4-r6,pc}
;;;340    
                          ENDP

00002a  0000              DCW      0x0000
                  |L16.44|
                          DCD      finsh_pc
                  |L16.48|
                          DCD      finsh_sp

                          AREA ||i.OP_ld_value_byte_stack||, CODE, READONLY, ALIGN=2

                  OP_ld_value_byte_stack PROC
;;;340    
;;;341    void OP_ld_value_byte_stack()
000000  4804              LDR      r0,|L17.20|
;;;342    {
;;;343    	char* c;
;;;344    
;;;345    	c = (char *)(finsh_sp - 1)->long_value;
000002  6800              LDR      r0,[r0,#0]  ; finsh_sp
000004  4601              MOV      r1,r0
000006  3980              SUBS     r1,r1,#0x80
000008  6fc9              LDR      r1,[r1,#0x7c]
;;;346    	(finsh_sp - 1)->char_value = *c;
00000a  3820              SUBS     r0,r0,#0x20
00000c  7809              LDRB     r1,[r1,#0]
00000e  7701              STRB     r1,[r0,#0x1c]
;;;347    
;;;348    	return;
;;;349    }
000010  4770              BX       lr
;;;350    
                          ENDP

000012  0000              DCW      0x0000
                  |L17.20|
                          DCD      finsh_sp

                          AREA ||i.OP_ld_value_dword||, CODE, READONLY, ALIGN=2

                  OP_ld_value_dword PROC
;;;374    
;;;375    void OP_ld_value_dword()
000000  b570              PUSH     {r4-r6,lr}
;;;376    {
;;;377    	long* l;
;;;378    
;;;379    	l = (long*) (FINSH_GET32(finsh_pc));
000002  4c09              LDR      r4,|L18.40|
000004  6820              LDR      r0,[r4,#0]  ; finsh_pc
000006  4605              MOV      r5,r0
000008  f7fffffe          BL       __aeabi_uread4
00000c  0201              LSLS     r1,r0,#8
00000e  78e8              LDRB     r0,[r5,#3]
000010  0a09              LSRS     r1,r1,#8
000012  0600              LSLS     r0,r0,#24
000014  4301              ORRS     r1,r1,r0
;;;380    
;;;381    	finsh_sp->long_value = *l;
000016  680a              LDR      r2,[r1,#0]
000018  4904              LDR      r1,|L18.44|
00001a  6808              LDR      r0,[r1,#0]  ; finsh_sp
00001c  c004              STM      r0!,{r2}
;;;382    
;;;383    	finsh_sp ++;
;;;384    	finsh_pc += 4;
00001e  6008              STR      r0,[r1,#0]  ; finsh_sp
000020  6820              LDR      r0,[r4,#0]  ; finsh_pc
000022  1d00              ADDS     r0,r0,#4
000024  6020              STR      r0,[r4,#0]  ; finsh_pc
;;;385    
;;;386    	return;
;;;387    }
000026  bd70              POP      {r4-r6,pc}
;;;388    
                          ENDP

                  |L18.40|
                          DCD      finsh_pc
                  |L18.44|
                          DCD      finsh_sp

                          AREA ||i.OP_ld_value_dword_stack||, CODE, READONLY, ALIGN=2

                  OP_ld_value_dword_stack PROC
;;;388    
;;;389    void OP_ld_value_dword_stack()
000000  4803              LDR      r0,|L19.16|
;;;390    {
;;;391    	long* l;
;;;392    
;;;393    	l = (long *)(finsh_sp - 1)->long_value;
000002  6800              LDR      r0,[r0,#0]  ; finsh_sp
000004  3880              SUBS     r0,r0,#0x80
;;;394    	(finsh_sp - 1)->long_value = *l;
000006  6fc1              LDR      r1,[r0,#0x7c]
000008  6809              LDR      r1,[r1,#0]
00000a  67c1              STR      r1,[r0,#0x7c]
;;;395    
;;;396    	return;
;;;397    }
00000c  4770              BX       lr
;;;398    
                          ENDP

00000e  0000              DCW      0x0000
                  |L19.16|
                          DCD      finsh_sp

                          AREA ||i.OP_ld_value_word||, CODE, READONLY, ALIGN=2

                  OP_ld_value_word PROC
;;;350    
;;;351    void OP_ld_value_word()
000000  b570              PUSH     {r4-r6,lr}
;;;352    {
;;;353    	short* s;
;;;354    
;;;355    	s = (short*) (FINSH_GET32(finsh_pc));
000002  4c0a              LDR      r4,|L20.44|
000004  6820              LDR      r0,[r4,#0]  ; finsh_pc
000006  4605              MOV      r5,r0
000008  f7fffffe          BL       __aeabi_uread4
00000c  0201              LSLS     r1,r0,#8
00000e  78e8              LDRB     r0,[r5,#3]
000010  0a09              LSRS     r1,r1,#8
000012  0600              LSLS     r0,r0,#24
000014  4301              ORRS     r1,r1,r0
;;;356    
;;;357    	finsh_sp->short_value = *s;
000016  880a              LDRH     r2,[r1,#0]
000018  4905              LDR      r1,|L20.48|
00001a  6808              LDR      r0,[r1,#0]  ; finsh_sp
00001c  8002              STRH     r2,[r0,#0]
00001e  1d00              ADDS     r0,r0,#4
;;;358    
;;;359    	finsh_sp ++;
;;;360    	finsh_pc += 4;
000020  6008              STR      r0,[r1,#0]  ; finsh_sp
000022  6820              LDR      r0,[r4,#0]  ; finsh_pc
000024  1d00              ADDS     r0,r0,#4
000026  6020              STR      r0,[r4,#0]  ; finsh_pc
;;;361    
;;;362    	return;
;;;363    }
000028  bd70              POP      {r4-r6,pc}
;;;364    
                          ENDP

00002a  0000              DCW      0x0000
                  |L20.44|
                          DCD      finsh_pc
                  |L20.48|
                          DCD      finsh_sp

                          AREA ||i.OP_ld_value_word_stack||, CODE, READONLY, ALIGN=2

                  OP_ld_value_word_stack PROC
;;;364    
;;;365    void OP_ld_value_word_stack()
000000  4804              LDR      r0,|L21.20|
;;;366    {
;;;367    	short* s;
;;;368    
;;;369    	s = (short *)(finsh_sp - 1)->long_value;
000002  6800              LDR      r0,[r0,#0]  ; finsh_sp
000004  4601              MOV      r1,r0
000006  3980              SUBS     r1,r1,#0x80
000008  6fc9              LDR      r1,[r1,#0x7c]
;;;370    	(finsh_sp - 1)->short_value = *s;
00000a  3840              SUBS     r0,r0,#0x40
00000c  8809              LDRH     r1,[r1,#0]
00000e  8781              STRH     r1,[r0,#0x3c]
;;;371    
;;;372    	return;
;;;373    }
000010  4770              BX       lr
;;;374    
                          ENDP

000012  0000              DCW      0x0000
                  |L21.20|
                          DCD      finsh_sp

                          AREA ||i.OP_ld_word||, CODE, READONLY, ALIGN=2

                  OP_ld_word PROC
;;;306    
;;;307    void OP_ld_word()
000000  4907              LDR      r1,|L22.32|
;;;308    {
;;;309    	finsh_sp->short_value = FINSH_GET16(finsh_pc);
000002  6808              LDR      r0,[r1,#0]  ; finsh_pc
000004  7842              LDRB     r2,[r0,#1]
000006  7800              LDRB     r0,[r0,#0]
000008  0213              LSLS     r3,r2,#8
00000a  4a06              LDR      r2,|L22.36|
00000c  4303              ORRS     r3,r3,r0
00000e  6810              LDR      r0,[r2,#0]  ; finsh_sp
000010  8003              STRH     r3,[r0,#0]
000012  1d00              ADDS     r0,r0,#4
;;;310    
;;;311    	finsh_sp ++;
;;;312    	finsh_pc += 2;
000014  6010              STR      r0,[r2,#0]  ; finsh_sp
000016  6808              LDR      r0,[r1,#0]  ; finsh_pc
000018  1c80              ADDS     r0,r0,#2
00001a  6008              STR      r0,[r1,#0]  ; finsh_pc
;;;313    
;;;314    	return ;
;;;315    }
00001c  4770              BX       lr
;;;316    
                          ENDP

00001e  0000              DCW      0x0000
                  |L22.32|
                          DCD      finsh_pc
                  |L22.36|
                          DCD      finsh_sp

                          AREA ||i.OP_mod_byte||, CODE, READONLY, ALIGN=2

                  OP_mod_byte PROC
;;;120    /* --- mod --- */
;;;121    void OP_mod_byte()
000000  b570              PUSH     {r4-r6,lr}
;;;122    {
;;;123    	OP_BIN_BYTE(%);
000002  4d06              LDR      r5,|L23.28|
000004  682c              LDR      r4,[r5,#0]  ; finsh_sp
000006  4626              MOV      r6,r4
000008  3c20              SUBS     r4,r4,#0x20
00000a  7f21              LDRB     r1,[r4,#0x1c]
00000c  7e20              LDRB     r0,[r4,#0x18]
00000e  f7fffffe          BL       __aeabi_uidivmod
000012  7621              STRB     r1,[r4,#0x18]
000014  1f36              SUBS     r6,r6,#4
000016  602e              STR      r6,[r5,#0]  ; finsh_sp
;;;124    
;;;125    	return ;
;;;126    }
000018  bd70              POP      {r4-r6,pc}
;;;127    
                          ENDP

00001a  0000              DCW      0x0000
                  |L23.28|
                          DCD      finsh_sp

                          AREA ||i.OP_mod_dword||, CODE, READONLY, ALIGN=2

                  OP_mod_dword PROC
;;;134    
;;;135    void OP_mod_dword()
000000  b570              PUSH     {r4-r6,lr}
;;;136    {
;;;137    	OP_BIN_DWORD(%);
000002  4d06              LDR      r5,|L24.28|
000004  682c              LDR      r4,[r5,#0]  ; finsh_sp
000006  4626              MOV      r6,r4
000008  3c80              SUBS     r4,r4,#0x80
00000a  6fe1              LDR      r1,[r4,#0x7c]
00000c  6fa0              LDR      r0,[r4,#0x78]
00000e  f7fffffe          BL       __aeabi_idivmod
000012  1f36              SUBS     r6,r6,#4
000014  67a1              STR      r1,[r4,#0x78]
000016  602e              STR      r6,[r5,#0]  ; finsh_sp
;;;138    
;;;139    	return ;
;;;140    }
000018  bd70              POP      {r4-r6,pc}
;;;141    
                          ENDP

00001a  0000              DCW      0x0000
                  |L24.28|
                          DCD      finsh_sp

                          AREA ||i.OP_mod_word||, CODE, READONLY, ALIGN=2

                  OP_mod_word PROC
;;;127    
;;;128    void OP_mod_word()
000000  b570              PUSH     {r4-r6,lr}
;;;129    {
;;;130    	OP_BIN_WORD(%);
000002  4d07              LDR      r5,|L25.32|
000004  213c              MOVS     r1,#0x3c
000006  682c              LDR      r4,[r5,#0]  ; finsh_sp
000008  2038              MOVS     r0,#0x38
00000a  4626              MOV      r6,r4
00000c  3c40              SUBS     r4,r4,#0x40
00000e  5e61              LDRSH    r1,[r4,r1]
000010  5e20              LDRSH    r0,[r4,r0]
000012  f7fffffe          BL       __aeabi_idivmod
000016  8721              STRH     r1,[r4,#0x38]
000018  1f36              SUBS     r6,r6,#4
00001a  602e              STR      r6,[r5,#0]  ; finsh_sp
;;;131    
;;;132    	return ;
;;;133    }
00001c  bd70              POP      {r4-r6,pc}
;;;134    
                          ENDP

00001e  0000              DCW      0x0000
                  |L25.32|
                          DCD      finsh_sp

                          AREA ||i.OP_mul_byte||, CODE, READONLY, ALIGN=2

                  OP_mul_byte PROC
;;;142    /* --- mul --- */
;;;143    void OP_mul_byte()
000000  b510              PUSH     {r4,lr}
;;;144    {
;;;145        OP_BIN_BYTE(*);
000002  4b05              LDR      r3,|L26.24|
000004  6818              LDR      r0,[r3,#0]  ; finsh_sp
000006  4601              MOV      r1,r0
000008  3820              SUBS     r0,r0,#0x20
00000a  7e02              LDRB     r2,[r0,#0x18]
00000c  7f04              LDRB     r4,[r0,#0x1c]
00000e  4362              MULS     r2,r4,r2
000010  7602              STRB     r2,[r0,#0x18]
000012  1f09              SUBS     r1,r1,#4
000014  6019              STR      r1,[r3,#0]  ; finsh_sp
;;;146    
;;;147    	return ;
;;;148    }
000016  bd10              POP      {r4,pc}
;;;149    
                          ENDP

                  |L26.24|
                          DCD      finsh_sp

                          AREA ||i.OP_mul_dword||, CODE, READONLY, ALIGN=2

                  OP_mul_dword PROC
;;;156    
;;;157    void OP_mul_dword()
000000  b510              PUSH     {r4,lr}
;;;158    {
;;;159    	OP_BIN_DWORD(*);
000002  4a05              LDR      r2,|L27.24|
000004  6810              LDR      r0,[r2,#0]  ; finsh_sp
000006  4601              MOV      r1,r0
000008  3880              SUBS     r0,r0,#0x80
00000a  6fc4              LDR      r4,[r0,#0x7c]
00000c  6f83              LDR      r3,[r0,#0x78]
00000e  4363              MULS     r3,r4,r3
000010  1f09              SUBS     r1,r1,#4
000012  6783              STR      r3,[r0,#0x78]
000014  6011              STR      r1,[r2,#0]  ; finsh_sp
;;;160    
;;;161    	return ;
;;;162    }
000016  bd10              POP      {r4,pc}
;;;163    
                          ENDP

                  |L27.24|
                          DCD      finsh_sp

                          AREA ||i.OP_mul_word||, CODE, READONLY, ALIGN=2

                  OP_mul_word PROC
;;;149    
;;;150    void OP_mul_word()
000000  b510              PUSH     {r4,lr}
;;;151    {
;;;152    	OP_BIN_WORD(*);
000002  4b05              LDR      r3,|L28.24|
000004  6818              LDR      r0,[r3,#0]  ; finsh_sp
000006  4601              MOV      r1,r0
000008  3840              SUBS     r0,r0,#0x40
00000a  8f02              LDRH     r2,[r0,#0x38]
00000c  8f84              LDRH     r4,[r0,#0x3c]
00000e  4362              MULS     r2,r4,r2
000010  8702              STRH     r2,[r0,#0x38]
000012  1f09              SUBS     r1,r1,#4
000014  6019              STR      r1,[r3,#0]  ; finsh_sp
;;;153    
;;;154    	return ;
;;;155    }
000016  bd10              POP      {r4,pc}
;;;156    
                          ENDP

                  |L28.24|
                          DCD      finsh_sp

                          AREA ||i.OP_no_op||, CODE, READONLY, ALIGN=1

                  OP_no_op PROC
;;;47     /* --- noop --- */
;;;48     void OP_no_op()
000000  4770              BX       lr
;;;49     {
;;;50     	/* none */
;;;51     	return ;
;;;52     }
;;;53     
                          ENDP


                          AREA ||i.OP_or_byte||, CODE, READONLY, ALIGN=2

                  OP_or_byte PROC
;;;186    /* --- or --- */
;;;187    void OP_or_byte()
000000  b510              PUSH     {r4,lr}
;;;188    {
;;;189    	OP_BIN_BYTE(|);
000002  4a05              LDR      r2,|L30.24|
000004  6810              LDR      r0,[r2,#0]  ; finsh_sp
000006  4601              MOV      r1,r0
000008  3820              SUBS     r0,r0,#0x20
00000a  7e03              LDRB     r3,[r0,#0x18]
00000c  7f04              LDRB     r4,[r0,#0x1c]
00000e  4323              ORRS     r3,r3,r4
000010  7603              STRB     r3,[r0,#0x18]
000012  1f09              SUBS     r1,r1,#4
000014  6011              STR      r1,[r2,#0]  ; finsh_sp
;;;190    
;;;191    	return ;
;;;192    }
000016  bd10              POP      {r4,pc}
;;;193    
                          ENDP

                  |L30.24|
                          DCD      finsh_sp

                          AREA ||i.OP_or_dword||, CODE, READONLY, ALIGN=2

                  OP_or_dword PROC
;;;200    
;;;201    void OP_or_dword()
000000  b510              PUSH     {r4,lr}
;;;202    {
;;;203    	OP_BIN_DWORD(|);
000002  4a05              LDR      r2,|L31.24|
000004  6810              LDR      r0,[r2,#0]  ; finsh_sp
000006  4601              MOV      r1,r0
000008  3880              SUBS     r0,r0,#0x80
00000a  6fc4              LDR      r4,[r0,#0x7c]
00000c  6f83              LDR      r3,[r0,#0x78]
00000e  4323              ORRS     r3,r3,r4
000010  1f09              SUBS     r1,r1,#4
000012  6783              STR      r3,[r0,#0x78]
000014  6011              STR      r1,[r2,#0]  ; finsh_sp
;;;204    
;;;205    	return ;
;;;206    }
000016  bd10              POP      {r4,pc}
;;;207    
                          ENDP

                  |L31.24|
                          DCD      finsh_sp

                          AREA ||i.OP_or_word||, CODE, READONLY, ALIGN=2

                  OP_or_word PROC
;;;193    
;;;194    void OP_or_word()
000000  b510              PUSH     {r4,lr}
;;;195    {
;;;196    	OP_BIN_WORD(|);
000002  4a05              LDR      r2,|L32.24|
000004  6810              LDR      r0,[r2,#0]  ; finsh_sp
000006  4601              MOV      r1,r0
000008  3840              SUBS     r0,r0,#0x40
00000a  8f03              LDRH     r3,[r0,#0x38]
00000c  8f84              LDRH     r4,[r0,#0x3c]
00000e  4323              ORRS     r3,r3,r4
000010  8703              STRH     r3,[r0,#0x38]
000012  1f09              SUBS     r1,r1,#4
000014  6011              STR      r1,[r2,#0]  ; finsh_sp
;;;197    
;;;198    	return ;
;;;199    }
000016  bd10              POP      {r4,pc}
;;;200    
                          ENDP

                  |L32.24|
                          DCD      finsh_sp

                          AREA ||i.OP_pop||, CODE, READONLY, ALIGN=2

                  OP_pop PROC
;;;436    /* --- pop --- */
;;;437    void OP_pop()
000000  4802              LDR      r0,|L33.12|
;;;438    {
;;;439    	finsh_sp --;
000002  6801              LDR      r1,[r0,#0]  ; finsh_sp
000004  1f09              SUBS     r1,r1,#4
000006  6001              STR      r1,[r0,#0]  ; finsh_sp
;;;440    	return ;
;;;441    }
000008  4770              BX       lr
;;;442    
                          ENDP

00000a  0000              DCW      0x0000
                  |L33.12|
                          DCD      finsh_sp

                          AREA ||i.OP_shl_byte||, CODE, READONLY, ALIGN=2

                  OP_shl_byte PROC
;;;252    /* --- shl --- */
;;;253    void OP_shl_byte()
000000  b510              PUSH     {r4,lr}
;;;254    {
;;;255    	OP_BIN_BYTE(<<);
000002  4b05              LDR      r3,|L34.24|
000004  6818              LDR      r0,[r3,#0]  ; finsh_sp
000006  4601              MOV      r1,r0
000008  3820              SUBS     r0,r0,#0x20
00000a  7e02              LDRB     r2,[r0,#0x18]
00000c  7f04              LDRB     r4,[r0,#0x1c]
00000e  40a2              LSLS     r2,r2,r4
000010  7602              STRB     r2,[r0,#0x18]
000012  1f09              SUBS     r1,r1,#4
000014  6019              STR      r1,[r3,#0]  ; finsh_sp
;;;256    
;;;257    	return ;
;;;258    }
000016  bd10              POP      {r4,pc}
;;;259    
                          ENDP

                  |L34.24|
                          DCD      finsh_sp

                          AREA ||i.OP_shl_dword||, CODE, READONLY, ALIGN=2

                  OP_shl_dword PROC
;;;266    
;;;267    void OP_shl_dword()
000000  b510              PUSH     {r4,lr}
;;;268    {
;;;269    	OP_BIN_DWORD(<<);
000002  4a05              LDR      r2,|L35.24|
000004  6810              LDR      r0,[r2,#0]  ; finsh_sp
000006  4601              MOV      r1,r0
000008  3880              SUBS     r0,r0,#0x80
00000a  6fc4              LDR      r4,[r0,#0x7c]
00000c  6f83              LDR      r3,[r0,#0x78]
00000e  40a3              LSLS     r3,r3,r4
000010  1f09              SUBS     r1,r1,#4
000012  6783              STR      r3,[r0,#0x78]
000014  6011              STR      r1,[r2,#0]  ; finsh_sp
;;;270    
;;;271    	return ;
;;;272    }
000016  bd10              POP      {r4,pc}
;;;273    
                          ENDP

                  |L35.24|
                          DCD      finsh_sp

                          AREA ||i.OP_shl_word||, CODE, READONLY, ALIGN=2

                  OP_shl_word PROC
;;;259    
;;;260    void OP_shl_word()
000000  b510              PUSH     {r4,lr}
;;;261    {
;;;262    	OP_BIN_WORD(<<);
000002  4b05              LDR      r3,|L36.24|
000004  6818              LDR      r0,[r3,#0]  ; finsh_sp
000006  4601              MOV      r1,r0
000008  3840              SUBS     r0,r0,#0x40
00000a  8f02              LDRH     r2,[r0,#0x38]
00000c  8f84              LDRH     r4,[r0,#0x3c]
00000e  40a2              LSLS     r2,r2,r4
000010  8702              STRH     r2,[r0,#0x38]
000012  1f09              SUBS     r1,r1,#4
000014  6019              STR      r1,[r3,#0]  ; finsh_sp
;;;263    
;;;264    	return ;
;;;265    }
000016  bd10              POP      {r4,pc}
;;;266    
                          ENDP

                  |L36.24|
                          DCD      finsh_sp

                          AREA ||i.OP_shr_byte||, CODE, READONLY, ALIGN=2

                  OP_shr_byte PROC
;;;274    /* --- shr --- */
;;;275    void OP_shr_byte()
000000  b510              PUSH     {r4,lr}
;;;276    {
;;;277    	OP_BIN_BYTE(>>);
000002  4a05              LDR      r2,|L37.24|
000004  6810              LDR      r0,[r2,#0]  ; finsh_sp
000006  4601              MOV      r1,r0
000008  3820              SUBS     r0,r0,#0x20
00000a  7e03              LDRB     r3,[r0,#0x18]
00000c  7f04              LDRB     r4,[r0,#0x1c]
00000e  40e3              LSRS     r3,r3,r4
000010  7603              STRB     r3,[r0,#0x18]
000012  1f09              SUBS     r1,r1,#4
000014  6011              STR      r1,[r2,#0]  ; finsh_sp
;;;278    
;;;279    	return ;
;;;280    }
000016  bd10              POP      {r4,pc}
;;;281    
                          ENDP

                  |L37.24|
                          DCD      finsh_sp

                          AREA ||i.OP_shr_dword||, CODE, READONLY, ALIGN=2

                  OP_shr_dword PROC
;;;288    
;;;289    void OP_shr_dword()
000000  b510              PUSH     {r4,lr}
;;;290    {
;;;291    	OP_BIN_DWORD(>>);
000002  4a05              LDR      r2,|L38.24|
000004  6810              LDR      r0,[r2,#0]  ; finsh_sp
000006  4601              MOV      r1,r0
000008  3880              SUBS     r0,r0,#0x80
00000a  6fc4              LDR      r4,[r0,#0x7c]
00000c  6f83              LDR      r3,[r0,#0x78]
00000e  4123              ASRS     r3,r3,r4
000010  1f09              SUBS     r1,r1,#4
000012  6783              STR      r3,[r0,#0x78]
000014  6011              STR      r1,[r2,#0]  ; finsh_sp
;;;292    
;;;293    	return ;
;;;294    }
000016  bd10              POP      {r4,pc}
;;;295    
                          ENDP

                  |L38.24|
                          DCD      finsh_sp

                          AREA ||i.OP_shr_word||, CODE, READONLY, ALIGN=2

                  OP_shr_word PROC
;;;281    
;;;282    void OP_shr_word()
000000  b510              PUSH     {r4,lr}
;;;283    {
;;;284    	OP_BIN_WORD(>>);
000002  4a06              LDR      r2,|L39.28|
000004  2338              MOVS     r3,#0x38
000006  6810              LDR      r0,[r2,#0]  ; finsh_sp
000008  4601              MOV      r1,r0
00000a  3840              SUBS     r0,r0,#0x40
00000c  5ec3              LDRSH    r3,[r0,r3]
00000e  8f84              LDRH     r4,[r0,#0x3c]
000010  4123              ASRS     r3,r3,r4
000012  8703              STRH     r3,[r0,#0x38]
000014  1f09              SUBS     r1,r1,#4
000016  6011              STR      r1,[r2,#0]  ; finsh_sp
;;;285    
;;;286    	return ;
;;;287    }
000018  bd10              POP      {r4,pc}
;;;288    
                          ENDP

00001a  0000              DCW      0x0000
                  |L39.28|
                          DCD      finsh_sp

                          AREA ||i.OP_st_byte||, CODE, READONLY, ALIGN=2

                  OP_st_byte PROC
;;;403     */
;;;404    void OP_st_byte()
000000  4905              LDR      r1,|L40.24|
;;;405    {
;;;406    	*(char*)((finsh_sp - 2)->long_value) = (finsh_sp - 1)->char_value;
000002  6808              LDR      r0,[r1,#0]  ; finsh_sp
000004  4602              MOV      r2,r0
000006  3880              SUBS     r0,r0,#0x80
000008  3a20              SUBS     r2,r2,#0x20
00000a  6f80              LDR      r0,[r0,#0x78]
00000c  7f12              LDRB     r2,[r2,#0x1c]
00000e  7002              STRB     r2,[r0,#0]
;;;407    	finsh_sp --;
000010  6808              LDR      r0,[r1,#0]  ; finsh_sp
000012  1f00              SUBS     r0,r0,#4
000014  6008              STR      r0,[r1,#0]  ; finsh_sp
;;;408    
;;;409    	return ;
;;;410    }
000016  4770              BX       lr
;;;411    
                          ENDP

                  |L40.24|
                          DCD      finsh_sp

                          AREA ||i.OP_st_dword||, CODE, READONLY, ALIGN=2

                  OP_st_dword PROC
;;;427     */
;;;428    void OP_st_dword()
000000  4904              LDR      r1,|L41.20|
;;;429    {
;;;430    	*(long*)((finsh_sp - 2)->long_value) = (finsh_sp - 1)->long_value;
000002  6808              LDR      r0,[r1,#0]  ; finsh_sp
000004  3808              SUBS     r0,r0,#8
000006  c805              LDM      r0,{r0,r2}
;;;431    	finsh_sp --;
000008  6002              STR      r2,[r0,#0]
00000a  6808              LDR      r0,[r1,#0]  ; finsh_sp
00000c  1f00              SUBS     r0,r0,#4
00000e  6008              STR      r0,[r1,#0]  ; finsh_sp
;;;432    
;;;433    	return ;
;;;434    }
000010  4770              BX       lr
;;;435    
                          ENDP

000012  0000              DCW      0x0000
                  |L41.20|
                          DCD      finsh_sp

                          AREA ||i.OP_st_word||, CODE, READONLY, ALIGN=2

                  OP_st_word PROC
;;;415     */
;;;416    void OP_st_word()
000000  4905              LDR      r1,|L42.24|
;;;417    {
;;;418    	*(short*)((finsh_sp - 2)->long_value) = (finsh_sp - 1)->short_value;
000002  6808              LDR      r0,[r1,#0]  ; finsh_sp
000004  4602              MOV      r2,r0
000006  3880              SUBS     r0,r0,#0x80
000008  3a40              SUBS     r2,r2,#0x40
00000a  6f80              LDR      r0,[r0,#0x78]
00000c  8f92              LDRH     r2,[r2,#0x3c]
00000e  8002              STRH     r2,[r0,#0]
;;;419    	finsh_sp --;
000010  6808              LDR      r0,[r1,#0]  ; finsh_sp
000012  1f00              SUBS     r0,r0,#4
000014  6008              STR      r0,[r1,#0]  ; finsh_sp
;;;420    
;;;421    	return ;
;;;422    }
000016  4770              BX       lr
;;;423    
                          ENDP

                  |L42.24|
                          DCD      finsh_sp

                          AREA ||i.OP_sub_byte||, CODE, READONLY, ALIGN=2

                  OP_sub_byte PROC
;;;76     /* --- sub --- */
;;;77     void OP_sub_byte()
000000  b510              PUSH     {r4,lr}
;;;78     {
;;;79     	OP_BIN_BYTE(-);
000002  4a05              LDR      r2,|L43.24|
000004  6810              LDR      r0,[r2,#0]  ; finsh_sp
000006  4601              MOV      r1,r0
000008  3820              SUBS     r0,r0,#0x20
00000a  7e03              LDRB     r3,[r0,#0x18]
00000c  7f04              LDRB     r4,[r0,#0x1c]
00000e  1b1b              SUBS     r3,r3,r4
000010  7603              STRB     r3,[r0,#0x18]
000012  1f09              SUBS     r1,r1,#4
000014  6011              STR      r1,[r2,#0]  ; finsh_sp
;;;80     
;;;81     	return ;
;;;82     }
000016  bd10              POP      {r4,pc}
;;;83     
                          ENDP

                  |L43.24|
                          DCD      finsh_sp

                          AREA ||i.OP_sub_dword||, CODE, READONLY, ALIGN=2

                  OP_sub_dword PROC
;;;90     
;;;91     void OP_sub_dword()
000000  b510              PUSH     {r4,lr}
;;;92     {
;;;93     	OP_BIN_DWORD(-);
000002  4a05              LDR      r2,|L44.24|
000004  6810              LDR      r0,[r2,#0]  ; finsh_sp
000006  4601              MOV      r1,r0
000008  3880              SUBS     r0,r0,#0x80
00000a  6fc4              LDR      r4,[r0,#0x7c]
00000c  6f83              LDR      r3,[r0,#0x78]
00000e  1b1b              SUBS     r3,r3,r4
000010  1f09              SUBS     r1,r1,#4
000012  6783              STR      r3,[r0,#0x78]
000014  6011              STR      r1,[r2,#0]  ; finsh_sp
;;;94     
;;;95     	return ;
;;;96     }
000016  bd10              POP      {r4,pc}
;;;97     
                          ENDP

                  |L44.24|
                          DCD      finsh_sp

                          AREA ||i.OP_sub_word||, CODE, READONLY, ALIGN=2

                  OP_sub_word PROC
;;;83     
;;;84     void OP_sub_word()
000000  b510              PUSH     {r4,lr}
;;;85     {
;;;86     	OP_BIN_WORD(-);
000002  4a05              LDR      r2,|L45.24|
000004  6810              LDR      r0,[r2,#0]  ; finsh_sp
000006  4601              MOV      r1,r0
000008  3840              SUBS     r0,r0,#0x40
00000a  8f03              LDRH     r3,[r0,#0x38]
00000c  8f84              LDRH     r4,[r0,#0x3c]
00000e  1b1b              SUBS     r3,r3,r4
000010  8703              STRH     r3,[r0,#0x38]
000012  1f09              SUBS     r1,r1,#4
000014  6011              STR      r1,[r2,#0]  ; finsh_sp
;;;87     
;;;88     	return ;
;;;89     }
000016  bd10              POP      {r4,pc}
;;;90     
                          ENDP

                  |L45.24|
                          DCD      finsh_sp

                          AREA ||i.OP_xor_byte||, CODE, READONLY, ALIGN=2

                  OP_xor_byte PROC
;;;208    /* --- xor --- */
;;;209    void OP_xor_byte()
000000  b510              PUSH     {r4,lr}
;;;210    {
;;;211    	OP_BIN_BYTE(^);
000002  4a05              LDR      r2,|L46.24|
000004  6810              LDR      r0,[r2,#0]  ; finsh_sp
000006  4601              MOV      r1,r0
000008  3820              SUBS     r0,r0,#0x20
00000a  7e03              LDRB     r3,[r0,#0x18]
00000c  7f04              LDRB     r4,[r0,#0x1c]
00000e  4063              EORS     r3,r3,r4
000010  7603              STRB     r3,[r0,#0x18]
000012  1f09              SUBS     r1,r1,#4
000014  6011              STR      r1,[r2,#0]  ; finsh_sp
;;;212    
;;;213    	return ;
;;;214    }
000016  bd10              POP      {r4,pc}
;;;215    
                          ENDP

                  |L46.24|
                          DCD      finsh_sp

                          AREA ||i.OP_xor_dword||, CODE, READONLY, ALIGN=2

                  OP_xor_dword PROC
;;;222    
;;;223    void OP_xor_dword()
000000  b510              PUSH     {r4,lr}
;;;224    {
;;;225    	OP_BIN_DWORD(^);
000002  4a05              LDR      r2,|L47.24|
000004  6810              LDR      r0,[r2,#0]  ; finsh_sp
000006  4601              MOV      r1,r0
000008  3880              SUBS     r0,r0,#0x80
00000a  6fc4              LDR      r4,[r0,#0x7c]
00000c  6f83              LDR      r3,[r0,#0x78]
00000e  4063              EORS     r3,r3,r4
000010  1f09              SUBS     r1,r1,#4
000012  6783              STR      r3,[r0,#0x78]
000014  6011              STR      r1,[r2,#0]  ; finsh_sp
;;;226    
;;;227    	return ;
;;;228    }
000016  bd10              POP      {r4,pc}
;;;229    
                          ENDP

                  |L47.24|
                          DCD      finsh_sp

                          AREA ||i.OP_xor_word||, CODE, READONLY, ALIGN=2

                  OP_xor_word PROC
;;;215    
;;;216    void OP_xor_word()
000000  b510              PUSH     {r4,lr}
;;;217    {
;;;218    	OP_BIN_WORD(^);
000002  4a05              LDR      r2,|L48.24|
000004  6810              LDR      r0,[r2,#0]  ; finsh_sp
000006  4601              MOV      r1,r0
000008  3840              SUBS     r0,r0,#0x40
00000a  8f03              LDRH     r3,[r0,#0x38]
00000c  8f84              LDRH     r4,[r0,#0x3c]
00000e  4063              EORS     r3,r3,r4
000010  8703              STRH     r3,[r0,#0x38]
000012  1f09              SUBS     r1,r1,#4
000014  6011              STR      r1,[r2,#0]  ; finsh_sp
;;;219    
;;;220    	return ;
;;;221    }
000016  bd10              POP      {r4,pc}
;;;222    
                          ENDP

                  |L48.24|
                          DCD      finsh_sp

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  op_table
                          DCD      OP_no_op
                          DCD      OP_add_byte
                          DCD      OP_add_word
                          DCD      OP_add_dword
                          DCD      OP_sub_byte
                          DCD      OP_sub_word
                          DCD      OP_sub_dword
                          DCD      OP_div_byte
                          DCD      OP_div_word
                          DCD      OP_div_dword
                          DCD      OP_mod_byte
                          DCD      OP_mod_word
                          DCD      OP_mod_dword
                          DCD      OP_mul_byte
                          DCD      OP_mul_word
                          DCD      OP_mul_dword
                          DCD      OP_and_byte
                          DCD      OP_and_word
                          DCD      OP_and_dword
                          DCD      OP_or_byte
                          DCD      OP_or_word
                          DCD      OP_or_dword
                          DCD      OP_xor_byte
                          DCD      OP_xor_word
                          DCD      OP_xor_dword
                          DCD      OP_bw_byte
                          DCD      OP_bw_word
                          DCD      OP_bw_dword
                          DCD      OP_shl_byte
                          DCD      OP_shl_word
                          DCD      OP_shl_dword
                          DCD      OP_shr_byte
                          DCD      OP_shr_word
                          DCD      OP_shr_dword
                          DCD      OP_ld_byte
                          DCD      OP_ld_word
                          DCD      OP_ld_dword
                          DCD      OP_ld_value_byte
                          DCD      OP_ld_value_word
                          DCD      OP_ld_value_dword
                          DCD      OP_st_byte
                          DCD      OP_st_word
                          DCD      OP_st_dword
                          DCD      OP_pop
                          DCD      OP_call
                          DCD      OP_ld_value_byte_stack
                          DCD      OP_ld_value_word_stack
                          DCD      OP_ld_value_dword_stack
                          DCD      0x00000000

                          AREA ||i.__ARM_common_switch8||, COMGROUP=__ARM_common_switch8, CODE, READONLY, ALIGN=1

                  __ARM_common_switch8 PROC
000000  b430              PUSH     {r4,r5}
000002  4674              MOV      r4,lr
000004  1e64              SUBS     r4,r4,#1
000006  7825              LDRB     r5,[r4,#0]
000008  1c64              ADDS     r4,r4,#1
00000a  42ab              CMP      r3,r5
00000c  d200              BCS      |L298.16|
00000e  461d              MOV      r5,r3
                  |L298.16|
000010  5d63              LDRB     r3,[r4,r5]
000012  005b              LSLS     r3,r3,#1
000014  18e3              ADDS     r3,r4,r3
000016  bc30              POP      {r4,r5}
000018  4718              BX       r3
                          ENDP

