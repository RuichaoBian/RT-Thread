; generated by Component: ARM Compiler 5.06 update 3 (build 300) Tool: ArmCC [4d35f0]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\objects\cpuport.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\cpuport.d --cpu=Cortex-M0 --apcs=interwork --diag_suppress=9931 -I.\Libraries\Device\Nuvoton -I..\..\components\finsh -I.\Libraries\CMSIS\Include -I.\Libraries\StdDriver\inc -I..\..\include -I.\APP -I.\Drivers -I..\..\components\drivers\include -I..\..\components\drivers\include\drivers -I..\nuvoton_nuc240 -I.\Libraries\Device\Nuvoton\NUC230_240\Include -I..\..\include -I..\..\components\drivers\usb\usbdevice\class -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=521 -DRT_DEBUG --omf_browse=.\objects\cpuport.crf ..\..\libcpu\arm\cortex-m0\cpuport.c]
                          THUMB

                          AREA ||i.rt_hw_hard_fault_exception||, CODE, READONLY, ALIGN=2

                  rt_hw_hard_fault_exception PROC
;;;101     */
;;;102    void rt_hw_hard_fault_exception(struct exception_stack_frame *contex)
000000  4604              MOV      r4,r0
;;;103    {
;;;104        rt_kprintf("psr: 0x%08x\n", contex->psr);
000002  69c1              LDR      r1,[r0,#0x1c]
000004  a013              ADR      r0,|L1.84|
000006  f7fffffe          BL       rt_kprintf
;;;105        rt_kprintf(" pc: 0x%08x\n", contex->pc);
00000a  a016              ADR      r0,|L1.100|
00000c  69a1              LDR      r1,[r4,#0x18]
00000e  f7fffffe          BL       rt_kprintf
;;;106        rt_kprintf(" lr: 0x%08x\n", contex->lr);
000012  a018              ADR      r0,|L1.116|
000014  6961              LDR      r1,[r4,#0x14]
000016  f7fffffe          BL       rt_kprintf
;;;107        rt_kprintf("r12: 0x%08x\n", contex->r12);
00001a  a01a              ADR      r0,|L1.132|
00001c  6921              LDR      r1,[r4,#0x10]
00001e  f7fffffe          BL       rt_kprintf
;;;108        rt_kprintf("r03: 0x%08x\n", contex->r3);
000022  a01c              ADR      r0,|L1.148|
000024  68e1              LDR      r1,[r4,#0xc]
000026  f7fffffe          BL       rt_kprintf
;;;109        rt_kprintf("r02: 0x%08x\n", contex->r2);
00002a  a01e              ADR      r0,|L1.164|
00002c  68a1              LDR      r1,[r4,#8]
00002e  f7fffffe          BL       rt_kprintf
;;;110        rt_kprintf("r01: 0x%08x\n", contex->r1);
000032  a020              ADR      r0,|L1.180|
000034  6861              LDR      r1,[r4,#4]
000036  f7fffffe          BL       rt_kprintf
;;;111        rt_kprintf("r00: 0x%08x\n", contex->r0);
00003a  a022              ADR      r0,|L1.196|
00003c  6821              LDR      r1,[r4,#0]
00003e  f7fffffe          BL       rt_kprintf
;;;112    
;;;113        rt_kprintf("hard fault on thread: %s\n", rt_current_thread->name);
000042  4824              LDR      r0,|L1.212|
000044  6801              LDR      r1,[r0,#0]  ; rt_current_thread
000046  a024              ADR      r0,|L1.216|
000048  f7fffffe          BL       rt_kprintf
;;;114    
;;;115    #ifdef RT_USING_FINSH
;;;116        list_thread();
00004c  f7fffffe          BL       list_thread
                  |L1.80|
;;;117    #endif
;;;118    
;;;119        while (1);
000050  e7fe              B        |L1.80|
;;;120    }
                          ENDP

000052  0000              DCW      0x0000
                  |L1.84|
000054  7073723a          DCB      "psr: 0x%08x\n",0
000058  20307825
00005c  3038780a
000060  00      
000061  00                DCB      0
000062  00                DCB      0
000063  00                DCB      0
                  |L1.100|
000064  2070633a          DCB      " pc: 0x%08x\n",0
000068  20307825
00006c  3038780a
000070  00      
000071  00                DCB      0
000072  00                DCB      0
000073  00                DCB      0
                  |L1.116|
000074  206c723a          DCB      " lr: 0x%08x\n",0
000078  20307825
00007c  3038780a
000080  00      
000081  00                DCB      0
000082  00                DCB      0
000083  00                DCB      0
                  |L1.132|
000084  7231323a          DCB      "r12: 0x%08x\n",0
000088  20307825
00008c  3038780a
000090  00      
000091  00                DCB      0
000092  00                DCB      0
000093  00                DCB      0
                  |L1.148|
000094  7230333a          DCB      "r03: 0x%08x\n",0
000098  20307825
00009c  3038780a
0000a0  00      
0000a1  00                DCB      0
0000a2  00                DCB      0
0000a3  00                DCB      0
                  |L1.164|
0000a4  7230323a          DCB      "r02: 0x%08x\n",0
0000a8  20307825
0000ac  3038780a
0000b0  00      
0000b1  00                DCB      0
0000b2  00                DCB      0
0000b3  00                DCB      0
                  |L1.180|
0000b4  7230313a          DCB      "r01: 0x%08x\n",0
0000b8  20307825
0000bc  3038780a
0000c0  00      
0000c1  00                DCB      0
0000c2  00                DCB      0
0000c3  00                DCB      0
                  |L1.196|
0000c4  7230303a          DCB      "r00: 0x%08x\n",0
0000c8  20307825
0000cc  3038780a
0000d0  00      
0000d1  00                DCB      0
0000d2  00                DCB      0
0000d3  00                DCB      0
                  |L1.212|
                          DCD      rt_current_thread
                  |L1.216|
0000d8  68617264          DCB      "hard fault on thread: %s\n",0
0000dc  20666175
0000e0  6c74206f
0000e4  6e207468
0000e8  72656164
0000ec  3a202573
0000f0  0a00    
0000f2  00                DCB      0
0000f3  00                DCB      0

                          AREA ||i.rt_hw_stack_init||, CODE, READONLY, ALIGN=2

                  rt_hw_stack_init PROC
;;;62      */
;;;63     rt_uint8_t *rt_hw_stack_init(void       *tentry,
000000  b5f0              PUSH     {r4-r7,lr}
;;;64                                  void       *parameter,
;;;65                                  rt_uint8_t *stack_addr,
;;;66                                  void       *texit)
;;;67     {
000002  4606              MOV      r6,r0
000004  1d12              ADDS     r2,r2,#4
;;;68         struct stack_frame *stack_frame;
;;;69         rt_uint8_t         *stk;
;;;70         unsigned long       i;
;;;71     
;;;72         stk  = stack_addr + sizeof(rt_uint32_t);
;;;73         stk  = (rt_uint8_t *)RT_ALIGN_DOWN((rt_uint32_t)stk, 8);
000006  08d0              LSRS     r0,r2,#3
000008  00c0              LSLS     r0,r0,#3
00000a  3840              SUBS     r0,r0,#0x40
;;;74         stk -= sizeof(struct stack_frame);
;;;75     
;;;76         stack_frame = (struct stack_frame *)stk;
;;;77     
;;;78         /* init all register */
;;;79         for (i = 0; i < sizeof(struct stack_frame) / sizeof(rt_uint32_t); i ++)
;;;80         {
;;;81             ((rt_uint32_t *)stack_frame)[i] = 0xdeadbeef;
00000c  4c09              LDR      r4,|L2.52|
00000e  4607              MOV      r7,r0                 ;74
000010  2200              MOVS     r2,#0                 ;79
                  |L2.18|
000012  0095              LSLS     r5,r2,#2
000014  1c52              ADDS     r2,r2,#1
000016  5144              STR      r4,[r0,r5]
000018  2a10              CMP      r2,#0x10              ;79
00001a  d3fa              BCC      |L2.18|
;;;82         }
;;;83     
;;;84         stack_frame->exception_stack_frame.r0  = (unsigned long)parameter; /* r0 : argument */
;;;85         stack_frame->exception_stack_frame.r1  = 0;                        /* r1 */
00001c  6201              STR      r1,[r0,#0x20]
00001e  2100              MOVS     r1,#0
;;;86         stack_frame->exception_stack_frame.r2  = 0;                        /* r2 */
000020  6241              STR      r1,[r0,#0x24]
;;;87         stack_frame->exception_stack_frame.r3  = 0;                        /* r3 */
000022  6281              STR      r1,[r0,#0x28]
000024  4602              MOV      r2,r0
000026  3230              ADDS     r2,r2,#0x30
000028  62c1              STR      r1,[r0,#0x2c]
00002a  c24a              STM      r2!,{r1,r3,r6}
;;;88         stack_frame->exception_stack_frame.r12 = 0;                        /* r12 */
;;;89         stack_frame->exception_stack_frame.lr  = (unsigned long)texit;     /* lr */
;;;90         stack_frame->exception_stack_frame.pc  = (unsigned long)tentry;    /* entry point, pc */
;;;91         stack_frame->exception_stack_frame.psr = 0x01000000L;              /* PSR */
00002c  2101              MOVS     r1,#1
00002e  0609              LSLS     r1,r1,#24
000030  63f9              STR      r1,[r7,#0x3c]
;;;92     
;;;93         /* return task's current stack address */
;;;94         return stk;
;;;95     }
000032  bdf0              POP      {r4-r7,pc}
;;;96     
                          ENDP

                  |L2.52|
                          DCD      0xdeadbeef

                          AREA ||.data||, DATA, ALIGN=2

                  rt_interrupt_from_thread
                          DCD      0x00000000

                          AREA ||area_number.6||, DATA, ALIGN=2

                          EXPORTAS ||area_number.6||, ||.data||
                  rt_interrupt_to_thread
                          DCD      0x00000000

                          AREA ||area_number.7||, DATA, ALIGN=2

                          EXPORTAS ||area_number.7||, ||.data||
                  rt_thread_switch_interrupt_flag
                          DCD      0x00000000
