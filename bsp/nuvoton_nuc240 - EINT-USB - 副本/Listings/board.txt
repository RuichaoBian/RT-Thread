; generated by Component: ARM Compiler 5.06 update 3 (build 300) Tool: ArmCC [4d35f0]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\objects\board.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\board.d --cpu=Cortex-M0 --apcs=interwork --diag_suppress=9931 -I.\Libraries\Device\Nuvoton -I..\..\components\finsh -I.\Libraries\CMSIS\Include -I.\Libraries\StdDriver\inc -I..\..\include -I.\APP -I.\Drivers -I..\..\components\drivers\include -I..\..\components\drivers\include\drivers -I..\nuvoton_nuc240 -I.\Libraries\Device\Nuvoton\NUC230_240\Include -I..\..\include -I..\..\components\drivers\usb\usbdevice\class -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=521 -DRT_DEBUG --omf_browse=.\objects\board.crf Drivers\board.c]
                          THUMB

                          AREA ||i.NVIC_Configuration||, CODE, READONLY, ALIGN=1

                  NVIC_Configuration PROC
;;;36     *******************************************************************************/
;;;37     void NVIC_Configuration(void)
000000  4770              BX       lr
;;;38     {
;;;39     	
;;;40        // NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);
;;;41     }
;;;42     
                          ENDP


                          AREA ||i.SysTick_Handler||, CODE, READONLY, ALIGN=1

                  SysTick_Handler PROC
;;;99      */
;;;100    void SysTick_Handler(void)
000000  b510              PUSH     {r4,lr}
;;;101    {
;;;102    	/* enter interrupt */
;;;103    	rt_interrupt_enter();
000002  f7fffffe          BL       rt_interrupt_enter
;;;104    
;;;105    	rt_tick_increase();
000006  f7fffffe          BL       rt_tick_increase
;;;106    
;;;107    	/* leave interrupt */
;;;108    	rt_interrupt_leave();
00000a  f7fffffe          BL       rt_interrupt_leave
;;;109    }
00000e  bd10              POP      {r4,pc}
;;;110    /**
                          ENDP


                          AREA ||i.rt_hw_board_init||, CODE, READONLY, ALIGN=2

                  rt_hw_board_init PROC
;;;112     */
;;;113    void rt_hw_board_init()
000000  b510              PUSH     {r4,lr}
;;;114    {
;;;115    	/* NVIC Configuration */
;;;116    	NVIC_Configuration();
;;;117    
;;;118      /* Configure the system clock */
;;;119      rt_hw_system_init();
000002  f7fffffe          BL       rt_hw_system_init
;;;120    	/* Configure the SysTick */
;;;121    	SysTick_Config(SystemCoreClock / RT_TICK_PER_SECOND);
000006  480f              LDR      r0,|L3.68|
000008  2164              MOVS     r1,#0x64
00000a  6800              LDR      r0,[r0,#0]  ; SystemCoreClock
00000c  f7fffffe          BL       __aeabi_uidivmod
000010  490d              LDR      r1,|L3.72|
000012  4288              CMP      r0,r1
000014  d80e              BHI      |L3.52|
000016  4001              ANDS     r1,r1,r0
000018  480c              LDR      r0,|L3.76|
00001a  1e49              SUBS     r1,r1,#1
00001c  6141              STR      r1,[r0,#0x14]
00001e  490c              LDR      r1,|L3.80|
000020  2207              MOVS     r2,#7
000022  69cb              LDR      r3,[r1,#0x1c]
000024  021b              LSLS     r3,r3,#8
000026  0a1b              LSRS     r3,r3,#8
000028  0444              LSLS     r4,r0,#17
00002a  4323              ORRS     r3,r3,r4
00002c  61cb              STR      r3,[r1,#0x1c]
00002e  2100              MOVS     r1,#0
000030  6181              STR      r1,[r0,#0x18]
000032  6102              STR      r2,[r0,#0x10]
                  |L3.52|
;;;122    
;;;123    	/* Initial usart deriver, and set console device */
;;;124    	rt_hw_usart_init();
000034  f7fffffe          BL       rt_hw_usart_init
;;;125    	
;;;126    	
;;;127    #ifdef RT_USING_CONSOLE
;;;128    	rt_console_set_device(RT_CONSOLE_DEVICE_NAME);
000038  a006              ADR      r0,|L3.84|
00003a  f7fffffe          BL       rt_console_set_device
;;;129    #endif
;;;130    
;;;131    	/* Call components board initial (use INIT_BOARD_EXPORT()) */
;;;132    #ifdef RT_USING_COMPONENTS_INIT
;;;133        rt_components_board_init();
00003e  f7fffffe          BL       rt_components_board_init
;;;134    #endif
;;;135    }
000042  bd10              POP      {r4,pc}
;;;136    
                          ENDP

                  |L3.68|
                          DCD      SystemCoreClock
                  |L3.72|
                          DCD      0x00ffffff
                  |L3.76|
                          DCD      0xe000e000
                  |L3.80|
                          DCD      0xe000ed04
                  |L3.84|
000054  75617274          DCB      "uart0",0
000058  3000    
00005a  00                DCB      0
00005b  00                DCB      0

                          AREA ||i.rt_hw_system_init||, CODE, READONLY, ALIGN=2

                  rt_hw_system_init PROC
;;;58     
;;;59     static void rt_hw_system_init(void)
000000  b570              PUSH     {r4-r6,lr}
000002  2059              MOVS     r0,#0x59
000004  2116              MOVS     r1,#0x16
000006  4c1a              LDR      r4,|L4.112|
000008  2288              MOVS     r2,#0x88
00000a  e002              B        |L4.18|
                  |L4.12|
00000c  6020              STR      r0,[r4,#0]
00000e  6021              STR      r1,[r4,#0]
000010  6022              STR      r2,[r4,#0]
                  |L4.18|
000012  6823              LDR      r3,[r4,#0]
000014  2b01              CMP      r3,#1
000016  d1f9              BNE      |L4.12|
;;;60     {
;;;61         /*---------------------------------------------------------------------------------------------------------*/
;;;62         /* Init System Clock                                                                                       */
;;;63         /*---------------------------------------------------------------------------------------------------------*/
;;;64         SYS_UnlockReg();
;;;65         /* Enable Internal RC 22.1184MHz clock */
;;;66         CLK_EnableXtalRC(CLK_PWRCON_OSC22M_EN_Msk);
000018  2004              MOVS     r0,#4
00001a  f7fffffe          BL       CLK_EnableXtalRC
;;;67     
;;;68         /* Waiting for Internal RC clock ready */
;;;69         CLK_WaitClockReady(CLK_CLKSTATUS_OSC22M_STB_Msk);
00001e  2010              MOVS     r0,#0x10
000020  f7fffffe          BL       CLK_WaitClockReady
;;;70     
;;;71         /* Switch HCLK clock source to Internal RC and HCLK source divide 1 */
;;;72         CLK_SetHCLK(CLK_CLKSEL0_HCLK_S_HIRC, CLK_CLKDIV_HCLK(1));
000024  2100              MOVS     r1,#0
000026  2007              MOVS     r0,#7
000028  f7fffffe          BL       CLK_SetHCLK
;;;73     	
;;;74     	 /* Enable external XTAL 12 MHz clock */
;;;75         CLK_EnableXtalRC(CLK_PWRCON_XTL12M_EN_Msk);   //add  RC
00002c  2001              MOVS     r0,#1
00002e  f7fffffe          BL       CLK_EnableXtalRC
;;;76     
;;;77         /* Waiting for external XTAL clock ready */
;;;78         CLK_WaitClockReady(CLK_CLKSTATUS_XTL12M_STB_Msk);//add  RC
000032  2001              MOVS     r0,#1
000034  f7fffffe          BL       CLK_WaitClockReady
;;;79     
;;;80         /* Set core clock as PLL_CLOCK from PLL */
;;;81         CLK_SetCoreClock(BOARD_PLL_CLOCK);
000038  480e              LDR      r0,|L4.116|
00003a  f7fffffe          BL       CLK_SetCoreClock
;;;82     		
;;;83     		CLK_EnableModuleClock(USBD_MODULE);   									//add  RC
00003e  4d0e              LDR      r5,|L4.120|
000040  4628              MOV      r0,r5
000042  f7fffffe          BL       CLK_EnableModuleClock
;;;84     		
;;;85     		CLK_SetModuleClock(USBD_MODULE, 0, CLK_CLKDIV_USB(3)); //add  RC
000046  2220              MOVS     r2,#0x20
000048  2100              MOVS     r1,#0
00004a  4628              MOV      r0,r5
00004c  f7fffffe          BL       CLK_SetModuleClock
;;;86     
;;;87         /* Set SysTick clock source to HCLK source divide 2 */
;;;88         CLK_SetSysTickClockSrc(CLK_CLKSEL0_STCLK_S_HCLK_DIV2);
000050  2018              MOVS     r0,#0x18
000052  f7fffffe          BL       CLK_SetSysTickClockSrc
;;;89         	/* Set GPB multi-function pins for external interrupt */
;;;90     		SYS->GPB_MFP &= ~(SYS_GPB_MFP_PB14_Msk);
000056  2005              MOVS     r0,#5
000058  0700              LSLS     r0,r0,#28
00005a  6b42              LDR      r2,[r0,#0x34]
00005c  1429              ASRS     r1,r5,#16
00005e  438a              BICS     r2,r2,r1
000060  6342              STR      r2,[r0,#0x34]
;;;91     		SYS->GPB_MFP |= (SYS_GPB_MFP_PB14_INT0);
000062  6b42              LDR      r2,[r0,#0x34]
000064  430a              ORRS     r2,r2,r1
000066  6342              STR      r2,[r0,#0x34]
000068  2000              MOVS     r0,#0
00006a  6020              STR      r0,[r4,#0]
;;;92     		
;;;93         SYS_LockReg();
;;;94     }
00006c  bd70              POP      {r4-r6,pc}
;;;95     
                          ENDP

00006e  0000              DCW      0x0000
                  |L4.112|
                          DCD      0x50000100
                  |L4.116|
                          DCD      0x044aa200
                  |L4.120|
                          DCD      0x40003c9b

;*** Start embedded assembler ***

#line 1 "Drivers\\board.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___7_board_c_696cd8ce____REV16|
#line 118 ".\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___7_board_c_696cd8ce____REV16| PROC
#line 119

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___7_board_c_696cd8ce____REVSH|
#line 132
|__asm___7_board_c_696cd8ce____REVSH| PROC
#line 133

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
