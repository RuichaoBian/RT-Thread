; generated by Component: ARM Compiler 5.06 update 3 (build 300) Tool: ArmCC [4d35f0]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\objects\showmem.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\showmem.d --cpu=Cortex-M0 --apcs=interwork --diag_suppress=9931 -I.\Libraries\Device\Nuvoton -I..\..\components\finsh -I.\Libraries\CMSIS\Include -I.\Libraries\StdDriver\inc -I..\..\include -I.\APP -I.\Drivers -I..\..\components\drivers\include -I..\..\components\drivers\include\drivers -I..\nuvoton_nuc240 -I.\Libraries\Device\Nuvoton\NUC230_240\Include -I..\..\include -I..\..\components\drivers\usb\usbdevice\class -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=521 -DRT_DEBUG --omf_browse=.\objects\showmem.crf ..\..\libcpu\arm\common\showmem.c]
                          THUMB

                          AREA ||i.rt_hw_show_memory||, CODE, READONLY, ALIGN=2

                  rt_hw_show_memory PROC
;;;16     
;;;17     void rt_hw_show_memory(rt_uint32_t addr, rt_uint32_t size)
000000  b5f8              PUSH     {r3-r7,lr}
;;;18     {
;;;19     	int i = 0, j =0;
000002  2600              MOVS     r6,#0
000004  460f              MOV      r7,r1                 ;18
000006  4604              MOV      r4,r0                 ;18
;;;20     
;;;21     	RT_ASSERT(addr);
000008  2800              CMP      r0,#0
00000a  d104              BNE      |L1.22|
00000c  2215              MOVS     r2,#0x15
00000e  490f              LDR      r1,|L1.76|
000010  a00f              ADR      r0,|L1.80|
000012  f7fffffe          BL       rt_assert_handler
                  |L1.22|
;;;22     
;;;23     	addr = addr & ~0xF;
000016  0925              LSRS     r5,r4,#4
000018  1cff              ADDS     r7,r7,#3
00001a  012d              LSLS     r5,r5,#4
;;;24     	size = 4*((size + 3)/4);
00001c  08bf              LSRS     r7,r7,#2
00001e  00bf              LSLS     r7,r7,#2
;;;25     
;;;26     	while(i < size)
000020  e010              B        |L1.68|
                  |L1.34|
;;;27     	{
;;;28     		rt_kprintf("0x%08x: ", addr );
000022  4629              MOV      r1,r5
000024  a00c              ADR      r0,|L1.88|
000026  f7fffffe          BL       rt_kprintf
;;;29     
;;;30     		for(j=0; j<4; j++)
00002a  2400              MOVS     r4,#0
                  |L1.44|
;;;31     		{
;;;32     			rt_kprintf("0x%08x  ", *(rt_uint32_t *)addr);
00002c  a00d              ADR      r0,|L1.100|
00002e  6829              LDR      r1,[r5,#0]
000030  f7fffffe          BL       rt_kprintf
000034  1c64              ADDS     r4,r4,#1
000036  1d2d              ADDS     r5,r5,#4
000038  1c76              ADDS     r6,r6,#1
00003a  2c04              CMP      r4,#4                 ;30
00003c  dbf6              BLT      |L1.44|
;;;33     
;;;34     			addr += 4;
;;;35     			i++;
;;;36     		}
;;;37     
;;;38     		rt_kprintf("\n");
00003e  a00c              ADR      r0,|L1.112|
000040  f7fffffe          BL       rt_kprintf
                  |L1.68|
000044  42be              CMP      r6,r7                 ;26
000046  d3ec              BCC      |L1.34|
;;;39     	}
;;;40     
;;;41     	return;
;;;42     }
000048  bdf8              POP      {r3-r7,pc}
                          ENDP

00004a  0000              DCW      0x0000
                  |L1.76|
                          DCD      ||.constdata||
                  |L1.80|
000050  61646472          DCB      "addr",0
000054  00      
000055  00                DCB      0
000056  00                DCB      0
000057  00                DCB      0
                  |L1.88|
000058  30782530          DCB      "0x%08x: ",0
00005c  38783a20
000060  00      
000061  00                DCB      0
000062  00                DCB      0
000063  00                DCB      0
                  |L1.100|
000064  30782530          DCB      "0x%08x  ",0
000068  38782020
00006c  00      
00006d  00                DCB      0
00006e  00                DCB      0
00006f  00                DCB      0
                  |L1.112|
000070  0a00              DCB      "\n",0
000072  00                DCB      0
000073  00                DCB      0

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  __FUNCTION__
000000  72745f68          DCB      0x72,0x74,0x5f,0x68
000004  775f7368          DCB      0x77,0x5f,0x73,0x68
000008  6f775f6d          DCB      0x6f,0x77,0x5f,0x6d
00000c  656d6f72          DCB      0x65,0x6d,0x6f,0x72
000010  7900              DCB      0x79,0x00
